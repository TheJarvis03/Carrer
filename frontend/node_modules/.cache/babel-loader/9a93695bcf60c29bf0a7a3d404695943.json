{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/majors'; // Changed from /api/search/majors\n\nexport const majorService = {\n  getAll: async () => {\n    try {\n      const res = await axios.get(API_URL);\n      const {\n        success,\n        data\n      } = res.data;\n      if (success && Array.isArray(data)) {\n        return {\n          success: true,\n          data: data.map(major => ({\n            code: major.code || major.major_code,\n            major_name: major.name || major.major_name,\n            group_id: major.group_id,\n            group_name: major.group_name,\n            exam_groups: major.exam_groups || []\n          }))\n        };\n      }\n      return {\n        success: false,\n        error: 'Invalid data format'\n      };\n    } catch (error) {\n      var _error$response;\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 404) {\n        return {\n          success: false,\n          error: 'API endpoint not found'\n        };\n      }\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  },\n  getMajorGroups: async () => {\n    try {\n      const res = await axios.get(`${API_URL}/groups`);\n      const {\n        success,\n        data\n      } = res.data;\n      if (success && Array.isArray(data)) {\n        return {\n          success: true,\n          data\n        };\n      }\n      return {\n        success: false,\n        error: 'Invalid group data format'\n      };\n    } catch (error) {\n      var _error$response2;\n      console.error('Error fetching major groups:', error);\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 404 ? 'Major groups endpoint not available' : error.message\n      };\n    }\n  },\n  searchMajors: async query => {\n    try {\n      if (!(query !== null && query !== void 0 && query.trim())) {\n        return this.getAll();\n      }\n      const response = await axios.get(`${API_URL}?q=${encodeURIComponent(query.trim())}`); // Changed from /search\n      const {\n        success,\n        data\n      } = response.data;\n      if (success && Array.isArray(data)) {\n        return {\n          success: true,\n          data: data.map(major => ({\n            code: major.code || major.major_code,\n            major_name: major.name || major.major_name,\n            group_id: major.group_id,\n            group_name: major.group_name,\n            exam_groups: major.exam_groups || []\n          }))\n        };\n      }\n      return {\n        success: false,\n        error: 'No results found'\n      };\n    } catch (error) {\n      var _error$response3;\n      console.error('Search error:', error);\n      return {\n        success: false,\n        error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 404 ? 'Search endpoint not available' : error.message\n      };\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","majorService","getAll","res","get","success","data","Array","isArray","map","major","code","major_code","major_name","name","group_id","group_name","exam_groups","error","_error$response","response","status","message","getMajorGroups","_error$response2","console","searchMajors","query","trim","encodeURIComponent","_error$response3"],"sources":["F:/career-project/frontend/src/services/majorService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5000/api/majors';  // Changed from /api/search/majors\n\nexport const majorService = {\n    getAll: async () => {\n        try {\n            const res = await axios.get(API_URL);\n            const { success, data } = res.data;\n\n            if (success && Array.isArray(data)) {\n                return {\n                    success: true,\n                    data: data.map((major) => ({\n                        code: major.code || major.major_code,\n                        major_name: major.name || major.major_name,\n                        group_id: major.group_id,\n                        group_name: major.group_name,\n                        exam_groups: major.exam_groups || [],\n                    })),\n                };\n            }\n            return { success: false, error: 'Invalid data format' };\n        } catch (error) {\n            if (error.response?.status === 404) {\n                return { success: false, error: 'API endpoint not found' };\n            }\n            return { success: false, error: error.message };\n        }\n    },\n\n    getMajorGroups: async () => {\n        try {\n            const res = await axios.get(`${API_URL}/groups`);\n            const { success, data } = res.data;\n            \n            if (success && Array.isArray(data)) {\n                return { success: true, data };\n            }\n            return { success: false, error: 'Invalid group data format' };\n        } catch (error) {\n            console.error('Error fetching major groups:', error);\n            return { \n                success: false, \n                error: error.response?.status === 404 \n                    ? 'Major groups endpoint not available' \n                    : error.message \n            };\n        }\n    },\n\n    searchMajors: async (query) => {\n        try {\n            if (!query?.trim()) {\n                return this.getAll();\n            }\n            const response = await axios.get(`${API_URL}?q=${encodeURIComponent(query.trim())}`); // Changed from /search\n            const { success, data } = response.data;\n            \n            if (success && Array.isArray(data)) {\n                return {\n                    success: true,\n                    data: data.map((major) => ({\n                        code: major.code || major.major_code,\n                        major_name: major.name || major.major_name,\n                        group_id: major.group_id,\n                        group_name: major.group_name,\n                        exam_groups: major.exam_groups || [],\n                    })),\n                };\n            }\n            return { success: false, error: 'No results found' };\n        } catch (error) {\n            console.error('Search error:', error);\n            return { \n                success: false, \n                error: error.response?.status === 404 \n                    ? 'Search endpoint not available' \n                    : error.message \n            };\n        }\n    },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}