{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api'; // Update base URL\n\n// Add request interceptor for debugging\naxios.interceptors.request.use(request => {\n  console.log('Starting Request:', request);\n  return request;\n});\n\n// Add response interceptor for debugging\naxios.interceptors.response.use(response => {\n  console.log('Response:', response);\n  return response;\n}, error => {\n  console.error('API Error:', error.response || error);\n  return Promise.reject(error);\n});\n\n// Add axios interceptor for auth headers\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport const authService = {\n  login: async (username, password) => {\n    try {\n      const response = await axios.post(`${API_URL}/auth/login`, {\n        username,\n        password\n      });\n      console.log('Login response:', response.data); // Debug log\n\n      if (response.data && response.data.token) {\n        return {\n          success: true,\n          data: {\n            token: response.data.token,\n            user: response.data.user\n          }\n        };\n      }\n      throw new Error('Token không hợp lệ');\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data;\n      console.error('Login error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error);\n      return {\n        success: false,\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Đăng nhập thất bại. Vui lòng kiểm tra lại thông tin.'\n      };\n    }\n  },\n  register: async userData => {\n    try {\n      const response = await axios.post(`${API_URL}/register`, userData);\n      if (response.data.success) {\n        return {\n          success: true\n        };\n      }\n      return {\n        success: false,\n        error: response.data.error || 'Đăng ký thất bại'\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      return {\n        success: false,\n        error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Đăng ký thất bại. Vui lòng thử lại sau.'\n      };\n    }\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n  },\n  getProfile: async () => {\n    try {\n      const response = await axios.get(`${API_URL}/profile`);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      return {\n        success: false,\n        error: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'Không thể tải thông tin người dùng'\n      };\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","interceptors","request","use","console","log","response","error","Promise","reject","config","token","localStorage","getItem","headers","Authorization","authService","login","username","password","post","data","success","user","Error","_error$response","_error$response2","_error$response2$data","message","register","userData","_error$response3","_error$response3$data","logout","removeItem","getProfile","get","_error$response4","_error$response4$data"],"sources":["F:/career-project/frontend/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5000/api'; // Update base URL\n\n// Add request interceptor for debugging\naxios.interceptors.request.use((request) => {\n    console.log('Starting Request:', request);\n    return request;\n});\n\n// Add response interceptor for debugging\naxios.interceptors.response.use(\n    (response) => {\n        console.log('Response:', response);\n        return response;\n    },\n    (error) => {\n        console.error('API Error:', error.response || error);\n        return Promise.reject(error);\n    },\n);\n\n// Add axios interceptor for auth headers\naxios.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    },\n);\n\nexport const authService = {\n    login: async (username, password) => {\n        try {\n            const response = await axios.post(`${API_URL}/auth/login`, {\n                username,\n                password,\n            });\n\n            console.log('Login response:', response.data); // Debug log\n\n            if (response.data && response.data.token) {\n                return {\n                    success: true,\n                    data: {\n                        token: response.data.token,\n                        user: response.data.user,\n                    },\n                };\n            }\n\n            throw new Error('Token không hợp lệ');\n        } catch (error) {\n            console.error('Login error:', error.response?.data || error);\n            return {\n                success: false,\n                message:\n                    error.response?.data?.message ||\n                    'Đăng nhập thất bại. Vui lòng kiểm tra lại thông tin.',\n            };\n        }\n    },\n\n    register: async (userData) => {\n        try {\n            const response = await axios.post(`${API_URL}/register`, userData);\n            if (response.data.success) {\n                return { success: true };\n            }\n            return {\n                success: false,\n                error: response.data.error || 'Đăng ký thất bại',\n            };\n        } catch (error) {\n            return {\n                success: false,\n                error:\n                    error.response?.data?.error ||\n                    'Đăng ký thất bại. Vui lòng thử lại sau.',\n            };\n        }\n    },\n\n    logout: () => {\n        localStorage.removeItem('token');\n    },\n\n    getProfile: async () => {\n        try {\n            const response = await axios.get(`${API_URL}/profile`);\n            return {\n                success: true,\n                data: response.data,\n            };\n        } catch (error) {\n            return {\n                success: false,\n                error:\n                    error.response?.data?.error ||\n                    'Không thể tải thông tin người dùng',\n            };\n        }\n    },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}