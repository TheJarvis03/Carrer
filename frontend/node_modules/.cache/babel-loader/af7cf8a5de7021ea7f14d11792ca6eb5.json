{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/major/detail';\nexport const majorDetailService = {\n  getMajorDetailByCode: async code => {\n    try {\n      const response = await axios.get(`${API_URL}/${code}`);\n      const {\n        success,\n        data\n      } = response.data;\n      if (success && data) {\n        return {\n          success: true,\n          data: {\n            id: data.major_id || data._id,\n            major_code: data.major_code || data.code || code,\n            major_name: data.major_name || data.name || '',\n            description: data.description || '',\n            job_opportunities: data.job_opportunities || '',\n            salary_range: data.salary_range || data.salary || '',\n            exam_groups: data.exam_groups || data.exam_group || []\n            // Thêm các trường khác nếu cần\n          }\n        };\n      }\n      return {\n        success: false,\n        error: 'Không tìm thấy thông tin ngành'\n      };\n    } catch (error) {\n      console.error('Error fetching major details:', error);\n      return {\n        success: false,\n        error: 'Có lỗi xảy ra khi tải thông tin ngành'\n      };\n    }\n  },\n  getMajorStatistics: async code => {\n    try {\n      const response = await axios.get(`${API_URL}/${code}/statistics`);\n      return response.data;\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  },\n  getMajorSchools: async code => {\n    try {\n      const response = await axios.get(`${API_URL}/${code}/schools`);\n      return response.data;\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","majorDetailService","getMajorDetailByCode","code","response","get","success","data","id","major_id","_id","major_code","major_name","name","description","job_opportunities","salary_range","salary","exam_groups","exam_group","error","console","getMajorStatistics","message","getMajorSchools"],"sources":["F:/career-project/frontend/src/services/majorDetailService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5000/api/major/detail';\n\nexport const majorDetailService = {\n    getMajorDetailByCode: async (code) => {\n        try {\n            const response = await axios.get(`${API_URL}/${code}`);\n            const { success, data } = response.data;\n\n            if (success && data) {\n                return {\n                    success: true,\n                    data: {\n                        id: data.major_id || data._id,\n                        major_code: data.major_code || data.code || code,\n                        major_name: data.major_name || data.name || '',\n                        description: data.description || '',\n                        job_opportunities: data.job_opportunities || '',\n                        salary_range: data.salary_range || data.salary || '',\n                        exam_groups: data.exam_groups || data.exam_group || [],\n                        // Thêm các trường khác nếu cần\n                    }\n                };\n            }\n            return { success: false, error: 'Không tìm thấy thông tin ngành' };\n        } catch (error) {\n            console.error('Error fetching major details:', error);\n            return {\n                success: false,\n                error: 'Có lỗi xảy ra khi tải thông tin ngành',\n            };\n        }\n    },\n\n    getMajorStatistics: async (code) => {\n        try {\n            const response = await axios.get(`${API_URL}/${code}/statistics`);\n            return response.data;\n        } catch (error) {\n            return { success: false, error: error.message };\n        }\n    },\n\n    getMajorSchools: async (code) => {\n        try {\n            const response = await axios.get(`${API_URL}/${code}/schools`);\n            return response.data;\n        } catch (error) {\n            return { success: false, error: error.message };\n        }\n    },\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,wCAAwC;AAExD,OAAO,MAAMC,kBAAkB,GAAG;EAC9BC,oBAAoB,EAAE,MAAOC,IAAI,IAAK;IAClC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,GAAGL,OAAO,IAAIG,IAAI,EAAE,CAAC;MACtD,MAAM;QAAEG,OAAO;QAAEC;MAAK,CAAC,GAAGH,QAAQ,CAACG,IAAI;MAEvC,IAAID,OAAO,IAAIC,IAAI,EAAE;QACjB,OAAO;UACHD,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;YACFC,EAAE,EAAED,IAAI,CAACE,QAAQ,IAAIF,IAAI,CAACG,GAAG;YAC7BC,UAAU,EAAEJ,IAAI,CAACI,UAAU,IAAIJ,IAAI,CAACJ,IAAI,IAAIA,IAAI;YAChDS,UAAU,EAAEL,IAAI,CAACK,UAAU,IAAIL,IAAI,CAACM,IAAI,IAAI,EAAE;YAC9CC,WAAW,EAAEP,IAAI,CAACO,WAAW,IAAI,EAAE;YACnCC,iBAAiB,EAAER,IAAI,CAACQ,iBAAiB,IAAI,EAAE;YAC/CC,YAAY,EAAET,IAAI,CAACS,YAAY,IAAIT,IAAI,CAACU,MAAM,IAAI,EAAE;YACpDC,WAAW,EAAEX,IAAI,CAACW,WAAW,IAAIX,IAAI,CAACY,UAAU,IAAI;YACpD;UACJ;QACJ,CAAC;MACL;MACA,OAAO;QAAEb,OAAO,EAAE,KAAK;QAAEc,KAAK,EAAE;MAAiC,CAAC;IACtE,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrD,OAAO;QACHd,OAAO,EAAE,KAAK;QACdc,KAAK,EAAE;MACX,CAAC;IACL;EACJ,CAAC;EAEDE,kBAAkB,EAAE,MAAOnB,IAAI,IAAK;IAChC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,GAAGL,OAAO,IAAIG,IAAI,aAAa,CAAC;MACjE,OAAOC,QAAQ,CAACG,IAAI;IACxB,CAAC,CAAC,OAAOa,KAAK,EAAE;MACZ,OAAO;QAAEd,OAAO,EAAE,KAAK;QAAEc,KAAK,EAAEA,KAAK,CAACG;MAAQ,CAAC;IACnD;EACJ,CAAC;EAEDC,eAAe,EAAE,MAAOrB,IAAI,IAAK;IAC7B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,GAAGL,OAAO,IAAIG,IAAI,UAAU,CAAC;MAC9D,OAAOC,QAAQ,CAACG,IAAI;IACxB,CAAC,CAAC,OAAOa,KAAK,EAAE;MACZ,OAAO;QAAEd,OAAO,EAAE,KAAK;QAAEc,KAAK,EAAEA,KAAK,CAACG;MAAQ,CAAC;IACnD;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}