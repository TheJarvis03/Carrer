{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/school/detail';\nconst updateEndpoints = {\n  MAJORS_URL: 'http://localhost:5000/api/majors',\n  SCORES_URL: 'http://localhost:5000/api/admissionScores'\n};\nexport const schoolDetailService = {\n  getSchoolByCode: async code => {\n    try {\n      const response = await axios.get(`${API_URL}/${code}`);\n      const {\n        success,\n        data\n      } = response.data;\n\n      // Add school type detection\n      const detectSchoolType = name => {\n        if (name.toLowerCase().includes('đại học')) return 1;\n        if (name.toLowerCase().includes('học viện')) return 2;\n        if (name.toLowerCase().includes('cao đẳng')) return 3;\n        return 4; // Other types\n      };\n      if (success && data) {\n        const schoolType = detectSchoolType(data.school_name);\n        return {\n          success: true,\n          data: {\n            id: data.school_id,\n            code: data.school_code,\n            // Thêm mã trường\n            school_name: data.school_name,\n            location: data.address,\n            // Đổi tên field \n            school_img: data.school_img,\n            description: data.description,\n            ownership: data.ownership,\n            founded_year: data.founded_year,\n            ranking: data.ranking,\n            website: data.website,\n            phones: data.phones || [],\n            // Thêm số điện thoại\n            method_link: data.method_link,\n            // Thêm link phương thức TS\n            student_count: data.student_count,\n            majors: data.majors || [],\n            facilities: data.facilities || [],\n            admission_scores: data.admission_scores || [],\n            schoolType: schoolType // Add school type\n          }\n        };\n      }\n      return {\n        success: false,\n        error: 'Không tìm thấy thông tin trường'\n      };\n    } catch (error) {\n      console.error('Error fetching school details:', error);\n      return {\n        success: false,\n        error: 'Có lỗi xảy ra khi tải thông tin trường'\n      };\n    }\n  },\n  getSchoolMajors: async schoolId => {\n    try {\n      const response = await axios.get(`${API_URL}/${schoolId}/majors`);\n      const {\n        success,\n        data\n      } = response.data;\n      if (success && Array.isArray(data)) {\n        return {\n          success: true,\n          data\n        };\n      }\n      return {\n        success: false,\n        error: 'Không tìm thấy danh sách ngành'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  },\n  getSchoolAdmissionScores: async schoolId => {\n    try {\n      const response = await axios.get(`${API_URL}/${schoolId}/scores`);\n      const {\n        success,\n        data\n      } = response.data;\n      if (success && Array.isArray(data)) {\n        return {\n          success: true,\n          data\n        };\n      }\n      return {\n        success: false,\n        error: 'Không tìm thấy điểm chuẩn'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  },\n  getSchoolFacilities: async schoolId => {\n    try {\n      const response = await axios.get(`${API_URL}/${schoolId}/facilities`);\n      const {\n        success,\n        data\n      } = response.data;\n      if (success && Array.isArray(data)) {\n        return {\n          success: true,\n          data\n        };\n      }\n      return {\n        success: false,\n        error: 'Không tìm thấy thông tin cơ sở vật chất'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  },\n  getMajorsBySchool: async code => {\n    try {\n      var _response$data, _response$data$data;\n      const response = await axios.get(`${API_URL}/${code}`);\n      if (response !== null && response !== void 0 && (_response$data = response.data) !== null && _response$data !== void 0 && _response$data.success && (_response$data$data = response.data.data) !== null && _response$data$data !== void 0 && _response$data$data.majors) {\n        // Lọc và sắp xếp các ngành theo stt\n        const validMajors = response.data.data.majors.filter(major => major.stt && parseInt(major.stt) <= 29) // Chỉ lấy các ngành có stt từ 1-29\n        .sort((a, b) => parseInt(a.stt) - parseInt(b.stt));\n        return {\n          success: true,\n          data: validMajors.map(major => ({\n            stt: major.stt,\n            majorName: major.major_name\n          }))\n        };\n      }\n      return {\n        success: false,\n        data: [],\n        error: 'Không tìm thấy thông tin ngành đào tạo'\n      };\n    } catch (error) {\n      console.error('Error fetching majors:', error);\n      return {\n        success: false,\n        data: [],\n        error: 'Lỗi khi tải dữ liệu ngành học'\n      };\n    }\n  },\n  getSchoolScores: async schoolCode => {\n    try {\n      var _response$data2;\n      const response = await axios.get(`${updateEndpoints.SCORES_URL}/school/${schoolCode}`);\n      if (response !== null && response !== void 0 && (_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.success) {\n        const groupedScores = {};\n        response.data.data.forEach(score => {\n          const year = score.year || new Date().getFullYear();\n          if (!groupedScores[year]) {\n            groupedScores[year] = [];\n          }\n          groupedScores[year].push({\n            majorName: score.major_name,\n            majorCode: score.major_code,\n            score: score.score || \"Chưa công bố\",\n            subjects: score.subjects || [],\n            note: score.note || ''\n          });\n        });\n        return {\n          success: true,\n          data: groupedScores\n        };\n      }\n      return {\n        success: false,\n        data: {},\n        error: 'Không tìm thấy điểm chuẩn'\n      };\n    } catch (error) {\n      console.error('Error fetching scores:', error);\n      return {\n        success: false,\n        data: {},\n        error: 'Lỗi khi tải điểm chuẩn'\n      };\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","updateEndpoints","MAJORS_URL","SCORES_URL","schoolDetailService","getSchoolByCode","code","response","get","success","data","detectSchoolType","name","toLowerCase","includes","schoolType","school_name","id","school_id","school_code","location","address","school_img","description","ownership","founded_year","ranking","website","phones","method_link","student_count","majors","facilities","admission_scores","error","console","getSchoolMajors","schoolId","Array","isArray","message","getSchoolAdmissionScores","getSchoolFacilities","getMajorsBySchool","_response$data","_response$data$data","validMajors","filter","major","stt","parseInt","sort","a","b","map","majorName","major_name","getSchoolScores","schoolCode","_response$data2","groupedScores","forEach","score","year","Date","getFullYear","push","majorCode","major_code","subjects","note"],"sources":["F:/career-project/frontend/src/services/schoolDetailService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/school/detail';\r\nconst updateEndpoints = {\r\n    MAJORS_URL: 'http://localhost:5000/api/majors',\r\n    SCORES_URL: 'http://localhost:5000/api/admissionScores'\r\n};\r\n\r\nexport const schoolDetailService = {\r\n    getSchoolByCode: async (code) => {\r\n        try {\r\n            const response = await axios.get(`${API_URL}/${code}`);\r\n            const { success, data } = response.data;\r\n\r\n            // Add school type detection\r\n            const detectSchoolType = (name) => {\r\n                if (name.toLowerCase().includes('đại học')) return 1;\r\n                if (name.toLowerCase().includes('học viện')) return 2;\r\n                if (name.toLowerCase().includes('cao đẳng')) return 3;\r\n                return 4; // Other types\r\n            };\r\n\r\n            if (success && data) {\r\n                const schoolType = detectSchoolType(data.school_name);\r\n                return {\r\n                    success: true,\r\n                    data: {\r\n                        id: data.school_id,\r\n                        code: data.school_code, // Thêm mã trường\r\n                        school_name: data.school_name,\r\n                        location: data.address, // Đổi tên field \r\n                        school_img: data.school_img,\r\n                        description: data.description,\r\n                        ownership: data.ownership,\r\n                        founded_year: data.founded_year,\r\n                        ranking: data.ranking,\r\n                        website: data.website,\r\n                        phones: data.phones || [], // Thêm số điện thoại\r\n                        method_link: data.method_link, // Thêm link phương thức TS\r\n                        student_count: data.student_count,\r\n                        majors: data.majors || [],\r\n                        facilities: data.facilities || [],\r\n                        admission_scores: data.admission_scores || [],\r\n                        schoolType: schoolType // Add school type\r\n                    }\r\n                };\r\n            }\r\n            return { success: false, error: 'Không tìm thấy thông tin trường' };\r\n        } catch (error) {\r\n            console.error('Error fetching school details:', error);\r\n            return { \r\n                success: false, \r\n                error: 'Có lỗi xảy ra khi tải thông tin trường' \r\n            };\r\n        }\r\n    },\r\n\r\n    getSchoolMajors: async (schoolId) => {\r\n        try {\r\n            const response = await axios.get(`${API_URL}/${schoolId}/majors`);\r\n            const { success, data } = response.data;\r\n\r\n            if (success && Array.isArray(data)) {\r\n                return { success: true, data };\r\n            }\r\n            return { success: false, error: 'Không tìm thấy danh sách ngành' };\r\n        } catch (error) {\r\n            return { success: false, error: error.message };\r\n        }\r\n    },\r\n\r\n    getSchoolAdmissionScores: async (schoolId) => {\r\n        try {\r\n            const response = await axios.get(`${API_URL}/${schoolId}/scores`);\r\n            const { success, data } = response.data;\r\n\r\n            if (success && Array.isArray(data)) {\r\n                return { success: true, data };\r\n            }\r\n            return { success: false, error: 'Không tìm thấy điểm chuẩn' };\r\n        } catch (error) {\r\n            return { success: false, error: error.message };\r\n        }\r\n    },\r\n\r\n    getSchoolFacilities: async (schoolId) => {\r\n        try {\r\n            const response = await axios.get(`${API_URL}/${schoolId}/facilities`);\r\n            const { success, data } = response.data;\r\n\r\n            if (success && Array.isArray(data)) {\r\n                return { success: true, data };\r\n            }\r\n            return { success: false, error: 'Không tìm thấy thông tin cơ sở vật chất' };\r\n        } catch (error) {\r\n            return { success: false, error: error.message };\r\n        }\r\n    },\r\n\r\n    getMajorsBySchool: async (code) => {\r\n        try {\r\n            const response = await axios.get(`${API_URL}/${code}`);\r\n            if (response?.data?.success && response.data.data?.majors) {\r\n                // Lọc và sắp xếp các ngành theo stt\r\n                const validMajors = response.data.data.majors\r\n                    .filter(major => major.stt && parseInt(major.stt) <= 29) // Chỉ lấy các ngành có stt từ 1-29\r\n                    .sort((a, b) => parseInt(a.stt) - parseInt(b.stt));\r\n\r\n                return {\r\n                    success: true,\r\n                    data: validMajors.map(major => ({\r\n                        stt: major.stt,\r\n                        majorName: major.major_name,\r\n                    }))\r\n                };\r\n            }\r\n            return { success: false, data: [], error: 'Không tìm thấy thông tin ngành đào tạo' };\r\n        } catch (error) {\r\n            console.error('Error fetching majors:', error);\r\n            return { success: false, data: [], error: 'Lỗi khi tải dữ liệu ngành học' };\r\n        }\r\n    },\r\n\r\n    getSchoolScores: async (schoolCode) => {\r\n        try {\r\n            const response = await axios.get(`${updateEndpoints.SCORES_URL}/school/${schoolCode}`);\r\n            if (response?.data?.success) {\r\n                const groupedScores = {};\r\n                response.data.data.forEach(score => {\r\n                    const year = score.year || new Date().getFullYear();\r\n                    if (!groupedScores[year]) {\r\n                        groupedScores[year] = [];\r\n                    }\r\n                    groupedScores[year].push({\r\n                        majorName: score.major_name,\r\n                        majorCode: score.major_code,\r\n                        score: score.score || \"Chưa công bố\",\r\n                        subjects: score.subjects || [],\r\n                        note: score.note || ''\r\n                    });\r\n                });\r\n\r\n                return {\r\n                    success: true,\r\n                    data: groupedScores\r\n                };\r\n            }\r\n            return { success: false, data: {}, error: 'Không tìm thấy điểm chuẩn' };\r\n        } catch (error) {\r\n            console.error('Error fetching scores:', error);\r\n            return { success: false, data: {}, error: 'Lỗi khi tải điểm chuẩn' };\r\n        }\r\n    }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}