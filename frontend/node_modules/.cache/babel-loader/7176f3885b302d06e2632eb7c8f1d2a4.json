{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/school/detail';\nconst SCORES_URL = 'http://localhost:5000/api/admissionScoress';\nexport const schoolDetailService = {\n  getSchoolByCode: async code => {\n    try {\n      const response = await axios.get(`${API_URL}/${code}`);\n      const {\n        success,\n        data\n      } = response.data;\n      if (success && data) {\n        return {\n          success: true,\n          data: {\n            id: data.school_id,\n            code: data.school_code,\n            // Thêm mã trường\n            school_name: data.school_name,\n            location: data.address,\n            // Đổi tên field \n            school_img: data.school_img,\n            description: data.description,\n            ownership: data.ownership,\n            founded_year: data.founded_year,\n            ranking: data.ranking,\n            website: data.website,\n            phones: data.phones || [],\n            // Thêm số điện thoại\n            method_link: data.method_link,\n            // Thêm link phương thức TS\n            student_count: data.student_count,\n            majors: data.majors || [],\n            facilities: data.facilities || [],\n            admission_scores: data.admission_scores || []\n          }\n        };\n      }\n      return {\n        success: false,\n        error: 'Không tìm thấy thông tin trường'\n      };\n    } catch (error) {\n      console.error('Error fetching school details:', error);\n      return {\n        success: false,\n        error: 'Có lỗi xảy ra khi tải thông tin trường'\n      };\n    }\n  },\n  getSchoolMajors: async schoolId => {\n    try {\n      const response = await axios.get(`${API_URL}/${schoolId}/majors`);\n      const {\n        success,\n        data\n      } = response.data;\n      if (success && Array.isArray(data)) {\n        return {\n          success: true,\n          data\n        };\n      }\n      return {\n        success: false,\n        error: 'Không tìm thấy danh sách ngành'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  },\n  getSchoolAdmissionScores: async schoolId => {\n    try {\n      const response = await axios.get(`${API_URL}/${schoolId}/scores`);\n      const {\n        success,\n        data\n      } = response.data;\n      if (success && Array.isArray(data)) {\n        return {\n          success: true,\n          data\n        };\n      }\n      return {\n        success: false,\n        error: 'Không tìm thấy điểm chuẩn'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  },\n  getSchoolFacilities: async schoolId => {\n    try {\n      const response = await axios.get(`${API_URL}/${schoolId}/facilities`);\n      const {\n        success,\n        data\n      } = response.data;\n      if (success && Array.isArray(data)) {\n        return {\n          success: true,\n          data\n        };\n      }\n      return {\n        success: false,\n        error: 'Không tìm thấy thông tin cơ sở vật chất'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  },\n  getSchoolScores: async schoolCode => {\n    try {\n      var _response$data;\n      const response = await axios.get(`${SCORES_URL}`, {\n        params: {\n          school_code: schoolCode\n        }\n      });\n      if (response !== null && response !== void 0 && (_response$data = response.data) !== null && _response$data !== void 0 && _response$data.success) {\n        return {\n          success: true,\n          data: response.data.data.map(score => ({\n            majorCode: score.major_code,\n            majorName: score.major_name,\n            year: score.year,\n            score: score.score,\n            note: score.note || '',\n            subjects: score.subjects || []\n          }))\n        };\n      }\n      return {\n        success: false,\n        error: 'Không tìm thấy điểm chuẩn'\n      };\n    } catch (error) {\n      console.error('Error fetching scores:', error);\n      return {\n        success: false,\n        error: 'Lỗi khi tải điểm chuẩn'\n      };\n    }\n  },\n  getMajorsBySchool: async schoolCode => {\n    try {\n      var _response$data2;\n      const response = await axios.get(`${API_URL}/${schoolCode}/majors`);\n      if (response !== null && response !== void 0 && (_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.success) {\n        return {\n          success: true,\n          data: response.data.data.map(major => ({\n            majorCode: major.major_code,\n            majorName: major.major_name,\n            subjects: major.subjects || []\n          }))\n        };\n      }\n      return {\n        success: false,\n        error: 'Không tìm thấy ngành đào tạo'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","SCORES_URL","schoolDetailService","getSchoolByCode","code","response","get","success","data","id","school_id","school_code","school_name","location","address","school_img","description","ownership","founded_year","ranking","website","phones","method_link","student_count","majors","facilities","admission_scores","error","console","getSchoolMajors","schoolId","Array","isArray","message","getSchoolAdmissionScores","getSchoolFacilities","getSchoolScores","schoolCode","_response$data","params","map","score","majorCode","major_code","majorName","major_name","year","note","subjects","getMajorsBySchool","_response$data2","major"],"sources":["F:/career-project/frontend/src/services/schoolDetailService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/school/detail';\r\nconst SCORES_URL = 'http://localhost:5000/api/admissionScoress';\r\n\r\nexport const schoolDetailService = {\r\n    getSchoolByCode: async (code) => {\r\n        try {\r\n            const response = await axios.get(`${API_URL}/${code}`);\r\n            const { success, data } = response.data;\r\n\r\n            if (success && data) {\r\n                return {\r\n                    success: true,\r\n                    data: {\r\n                        id: data.school_id,\r\n                        code: data.school_code, // Thêm mã trường\r\n                        school_name: data.school_name,\r\n                        location: data.address, // Đổi tên field \r\n                        school_img: data.school_img,\r\n                        description: data.description,\r\n                        ownership: data.ownership,\r\n                        founded_year: data.founded_year,\r\n                        ranking: data.ranking,\r\n                        website: data.website,\r\n                        phones: data.phones || [], // Thêm số điện thoại\r\n                        method_link: data.method_link, // Thêm link phương thức TS\r\n                        student_count: data.student_count,\r\n                        majors: data.majors || [],\r\n                        facilities: data.facilities || [],\r\n                        admission_scores: data.admission_scores || []\r\n                    }\r\n                };\r\n            }\r\n            return { success: false, error: 'Không tìm thấy thông tin trường' };\r\n        } catch (error) {\r\n            console.error('Error fetching school details:', error);\r\n            return { \r\n                success: false, \r\n                error: 'Có lỗi xảy ra khi tải thông tin trường' \r\n            };\r\n        }\r\n    },\r\n\r\n    getSchoolMajors: async (schoolId) => {\r\n        try {\r\n            const response = await axios.get(`${API_URL}/${schoolId}/majors`);\r\n            const { success, data } = response.data;\r\n\r\n            if (success && Array.isArray(data)) {\r\n                return { success: true, data };\r\n            }\r\n            return { success: false, error: 'Không tìm thấy danh sách ngành' };\r\n        } catch (error) {\r\n            return { success: false, error: error.message };\r\n        }\r\n    },\r\n\r\n    getSchoolAdmissionScores: async (schoolId) => {\r\n        try {\r\n            const response = await axios.get(`${API_URL}/${schoolId}/scores`);\r\n            const { success, data } = response.data;\r\n\r\n            if (success && Array.isArray(data)) {\r\n                return { success: true, data };\r\n            }\r\n            return { success: false, error: 'Không tìm thấy điểm chuẩn' };\r\n        } catch (error) {\r\n            return { success: false, error: error.message };\r\n        }\r\n    },\r\n\r\n    getSchoolFacilities: async (schoolId) => {\r\n        try {\r\n            const response = await axios.get(`${API_URL}/${schoolId}/facilities`);\r\n            const { success, data } = response.data;\r\n\r\n            if (success && Array.isArray(data)) {\r\n                return { success: true, data };\r\n            }\r\n            return { success: false, error: 'Không tìm thấy thông tin cơ sở vật chất' };\r\n        } catch (error) {\r\n            return { success: false, error: error.message };\r\n        }\r\n    },\r\n\r\n    getSchoolScores: async (schoolCode) => {\r\n        try {\r\n            const response = await axios.get(`${SCORES_URL}`, {\r\n                params: {\r\n                    school_code: schoolCode\r\n                }\r\n            });\r\n            \r\n            if (response?.data?.success) {\r\n                return {\r\n                    success: true,\r\n                    data: response.data.data.map(score => ({\r\n                        majorCode: score.major_code,\r\n                        majorName: score.major_name,\r\n                        year: score.year,\r\n                        score: score.score,\r\n                        note: score.note || '',\r\n                        subjects: score.subjects || []\r\n                    }))\r\n                };\r\n            }\r\n            return { success: false, error: 'Không tìm thấy điểm chuẩn' };\r\n        } catch (error) {\r\n            console.error('Error fetching scores:', error);\r\n            return { success: false, error: 'Lỗi khi tải điểm chuẩn' };\r\n        }\r\n    },\r\n\r\n    getMajorsBySchool: async (schoolCode) => {\r\n        try {\r\n            const response = await axios.get(`${API_URL}/${schoolCode}/majors`);\r\n            if (response?.data?.success) {\r\n                return {\r\n                    success: true,\r\n                    data: response.data.data.map(major => ({\r\n                        majorCode: major.major_code,\r\n                        majorName: major.major_name,\r\n                        subjects: major.subjects || []\r\n                    }))\r\n                };\r\n            }\r\n            return { success: false, error: 'Không tìm thấy ngành đào tạo' };\r\n        } catch (error) {\r\n            return { success: false, error: error.message };\r\n        }\r\n    }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}