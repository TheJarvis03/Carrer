{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/search/schools';\nexport const schoolService = {\n  getAll: async () => {\n    try {\n      const res = await axios.get(API_URL);\n      const {\n        success,\n        data\n      } = res.data;\n\n      // Return data directly without mapping to preserve order\n      if (success && Array.isArray(data)) {\n        return {\n          success: true,\n          data\n        };\n      }\n      return {\n        success: false,\n        error: 'Không nhận được dữ liệu hoặc định dạng không hợp lệ'\n      };\n    } catch (error) {\n      console.error('Lỗi khi tải danh sách trường:', error);\n      return {\n        success: false,\n        error: error.message || 'Có lỗi xảy ra khi tải dữ liệu'\n      };\n    }\n  },\n  searchSchools: async query => {\n    try {\n      const response = await axios.get(`${API_URL}/search?q=${encodeURIComponent(query)}`);\n      const {\n        success,\n        data\n      } = response.data;\n      if (success) {\n        return {\n          success: true,\n          data\n        };\n      }\n      return {\n        success: false,\n        error: 'Search failed'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  },\n  getSchoolById: async id => {\n    try {\n      const response = await axios.get(`${API_URL}/${id}`);\n      const {\n        success,\n        data\n      } = response.data;\n      if (success) {\n        return {\n          success: true,\n          data\n        };\n      }\n      return {\n        success: false,\n        error: 'Không tìm thấy thông tin trường'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message || 'Lỗi khi tải thông tin trường'\n      };\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","schoolService","getAll","res","get","success","data","Array","isArray","error","console","message","searchSchools","query","response","encodeURIComponent","getSchoolById","id"],"sources":["F:/career-project/frontend/src/services/schoolService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5000/api/search/schools';\n\nexport const schoolService = {\n    getAll: async () => {\n        try {\n            const res = await axios.get(API_URL);\n            const { success, data } = res.data;\n\n            // Return data directly without mapping to preserve order\n            if (success && Array.isArray(data)) {\n                return { success: true, data };\n            }\n\n            return {\n                success: false,\n                error: 'Không nhận được dữ liệu hoặc định dạng không hợp lệ'\n            };\n        } catch (error) {\n            console.error('Lỗi khi tải danh sách trường:', error);\n            return { \n                success: false, \n                error: error.message || 'Có lỗi xảy ra khi tải dữ liệu'\n            };\n        }\n    },\n\n    searchSchools: async (query) => {\n        try {\n            const response = await axios.get(\n                `${API_URL}/search?q=${encodeURIComponent(query)}`,\n            );\n            const { success, data } = response.data;\n            if (success) {\n                return { success: true, data };\n            }\n            return { success: false, error: 'Search failed' };\n        } catch (error) {\n            return { success: false, error: error.message };\n        }\n    },\n\n    getSchoolById: async (id) => {\n        try {\n            const response = await axios.get(`${API_URL}/${id}`);\n            const { success, data } = response.data;\n            \n            if (success) {\n                return { success: true, data };\n            }\n            return { \n                success: false, \n                error: 'Không tìm thấy thông tin trường' \n            };\n        } catch (error) {\n            return { \n                success: false, \n                error: error.message || 'Lỗi khi tải thông tin trường' \n            };\n        }\n    }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,0CAA0C;AAE1D,OAAO,MAAMC,aAAa,GAAG;EACzBC,MAAM,EAAE,MAAAA,CAAA,KAAY;IAChB,IAAI;MACA,MAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACJ,OAAO,CAAC;MACpC,MAAM;QAAEK,OAAO;QAAEC;MAAK,CAAC,GAAGH,GAAG,CAACG,IAAI;;MAElC;MACA,IAAID,OAAO,IAAIE,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE;QAChC,OAAO;UAAED,OAAO,EAAE,IAAI;UAAEC;QAAK,CAAC;MAClC;MAEA,OAAO;QACHD,OAAO,EAAE,KAAK;QACdI,KAAK,EAAE;MACX,CAAC;IACL,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrD,OAAO;QACHJ,OAAO,EAAE,KAAK;QACdI,KAAK,EAAEA,KAAK,CAACE,OAAO,IAAI;MAC5B,CAAC;IACL;EACJ,CAAC;EAEDC,aAAa,EAAE,MAAOC,KAAK,IAAK;IAC5B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACK,GAAG,CAC5B,GAAGJ,OAAO,aAAae,kBAAkB,CAACF,KAAK,CAAC,EACpD,CAAC;MACD,MAAM;QAAER,OAAO;QAAEC;MAAK,CAAC,GAAGQ,QAAQ,CAACR,IAAI;MACvC,IAAID,OAAO,EAAE;QACT,OAAO;UAAEA,OAAO,EAAE,IAAI;UAAEC;QAAK,CAAC;MAClC;MACA,OAAO;QAAED,OAAO,EAAE,KAAK;QAAEI,KAAK,EAAE;MAAgB,CAAC;IACrD,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZ,OAAO;QAAEJ,OAAO,EAAE,KAAK;QAAEI,KAAK,EAAEA,KAAK,CAACE;MAAQ,CAAC;IACnD;EACJ,CAAC;EAEDK,aAAa,EAAE,MAAOC,EAAE,IAAK;IACzB,IAAI;MACA,MAAMH,QAAQ,GAAG,MAAMf,KAAK,CAACK,GAAG,CAAC,GAAGJ,OAAO,IAAIiB,EAAE,EAAE,CAAC;MACpD,MAAM;QAAEZ,OAAO;QAAEC;MAAK,CAAC,GAAGQ,QAAQ,CAACR,IAAI;MAEvC,IAAID,OAAO,EAAE;QACT,OAAO;UAAEA,OAAO,EAAE,IAAI;UAAEC;QAAK,CAAC;MAClC;MACA,OAAO;QACHD,OAAO,EAAE,KAAK;QACdI,KAAK,EAAE;MACX,CAAC;IACL,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZ,OAAO;QACHJ,OAAO,EAAE,KAAK;QACdI,KAAK,EAAEA,KAAK,CAACE,OAAO,IAAI;MAC5B,CAAC;IACL;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}