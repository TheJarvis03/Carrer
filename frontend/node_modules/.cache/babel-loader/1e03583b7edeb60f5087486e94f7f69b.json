{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/major/detail';\nexport const majorDetailService = {\n  getAllMajorDetails: async () => {\n    const response = await axios.get(API_URL);\n    return response.data;\n  },\n  createMajorDetail: async majorDetail => {\n    const response = await axios.post(API_URL, majorDetail);\n    return response.data;\n  },\n  updateMajorDetail: async (id, majorDetail) => {\n    const response = await axios.put(`${API_URL}/${id}`, majorDetail);\n    return response.data;\n  },\n  deleteMajorDetail: async id => {\n    const response = await axios.delete(`${API_URL}/${id}`);\n    return response.data;\n  },\n  getMajorDetailByCode: async code => {\n    try {\n      const response = await axios.get(`${API_URL}/${code}`);\n      const {\n        success,\n        data\n      } = response.data;\n      if (success && data) {\n        return {\n          success: true,\n          data: {\n            major_code: data.maNganh || code,\n            major_name: data.tenNganh || '',\n            description: data.moTa || '',\n            job_opportunities: data.coHoiViecLam || '',\n            salary_range: data.mucLuong || '',\n            exam_groups: data.khoiThi || [],\n            duration: data.thoiGianDaoTao || '',\n            tuition_fee: data.hocPhi || '',\n            schools: data.truongDaoTao || [],\n            skills: data.kyNang || [],\n            subjects: data.monHocChinh || []\n          }\n        };\n      }\n      return {\n        success: false,\n        error: 'Không tìm thấy thông tin ngành học'\n      };\n    } catch (error) {\n      console.error('Error fetching major details:', error);\n      return {\n        success: false,\n        error: 'Có lỗi xảy ra khi tải thông tin ngành học'\n      };\n    }\n  },\n  getMajorStatistics: async code => {\n    try {\n      const response = await axios.get(`${API_URL}/${code}/statistics`);\n      const {\n        success,\n        data\n      } = response.data;\n      if (success && data) {\n        return {\n          success: true,\n          data\n        };\n      }\n      return {\n        success: false,\n        error: 'Không tìm thấy thống kê ngành học'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: 'Có lỗi xảy ra khi tải thống kê ngành học'\n      };\n    }\n  },\n  getMajorSchools: async code => {\n    try {\n      const response = await axios.get(`${API_URL}/${code}/schools`);\n      const {\n        success,\n        data\n      } = response.data;\n      if (success && Array.isArray(data)) {\n        return {\n          success: true,\n          data\n        };\n      }\n      return {\n        success: false,\n        error: 'Không tìm thấy danh sách trường'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: 'Có lỗi xảy ra khi tải danh sách trường'\n      };\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","majorDetailService","getAllMajorDetails","response","get","data","createMajorDetail","majorDetail","post","updateMajorDetail","id","put","deleteMajorDetail","delete","getMajorDetailByCode","code","success","major_code","maNganh","major_name","tenNganh","description","moTa","job_opportunities","coHoiViecLam","salary_range","mucLuong","exam_groups","khoiThi","duration","thoiGianDaoTao","tuition_fee","hocPhi","schools","truongDaoTao","skills","kyNang","subjects","monHocChinh","error","console","getMajorStatistics","getMajorSchools","Array","isArray"],"sources":["F:/career-project/frontend/src/services/majorDetailService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5000/api/major/detail';\n\nexport const majorDetailService = {\n    getAllMajorDetails: async () => {\n        const response = await axios.get(API_URL);\n        return response.data;\n    },\n    createMajorDetail: async (majorDetail) => {\n        const response = await axios.post(API_URL, majorDetail);\n        return response.data;\n    },\n    updateMajorDetail: async (id, majorDetail) => {\n        const response = await axios.put(`${API_URL}/${id}`, majorDetail);\n        return response.data;\n    },\n    deleteMajorDetail: async (id) => {\n        const response = await axios.delete(`${API_URL}/${id}`);\n        return response.data;\n    },\n    getMajorDetailByCode: async (code) => {\n        try {\n            const response = await axios.get(`${API_URL}/${code}`);\n            const { success, data } = response.data;\n\n            if (success && data) {\n                return {\n                    success: true,\n                    data: {\n                        major_code: data.maNganh || code,\n                        major_name: data.tenNganh || '',\n                        description: data.moTa || '',\n                        job_opportunities: data.coHoiViecLam || '',\n                        salary_range: data.mucLuong || '',\n                        exam_groups: data.khoiThi || [],\n                        duration: data.thoiGianDaoTao || '',\n                        tuition_fee: data.hocPhi || '',\n                        schools: data.truongDaoTao || [],\n                        skills: data.kyNang || [],\n                        subjects: data.monHocChinh || []\n                    }\n                };\n            }\n            return {\n                success: false,\n                error: 'Không tìm thấy thông tin ngành học'\n            };\n        } catch (error) {\n            console.error('Error fetching major details:', error);\n            return {\n                success: false,\n                error: 'Có lỗi xảy ra khi tải thông tin ngành học'\n            };\n        }\n    },\n\n    getMajorStatistics: async (code) => {\n        try {\n            const response = await axios.get(`${API_URL}/${code}/statistics`);\n            const { success, data } = response.data;\n\n            if (success && data) {\n                return { success: true, data };\n            }\n            return { success: false, error: 'Không tìm thấy thống kê ngành học' };\n        } catch (error) {\n            return { \n                success: false, \n                error: 'Có lỗi xảy ra khi tải thống kê ngành học' \n            };\n        }\n    },\n\n    getMajorSchools: async (code) => {\n        try {\n            const response = await axios.get(`${API_URL}/${code}/schools`);\n            const { success, data } = response.data;\n\n            if (success && Array.isArray(data)) {\n                return { success: true, data };\n            }\n            return { success: false, error: 'Không tìm thấy danh sách trường' };\n        } catch (error) {\n            return { \n                success: false, \n                error: 'Có lỗi xảy ra khi tải danh sách trường' \n            };\n        }\n    }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}