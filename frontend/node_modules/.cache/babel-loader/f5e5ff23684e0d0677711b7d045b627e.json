{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/school/detail';\nconst updateEndpoints = {\n  MAJORS_URL: 'http://localhost:5000/api/majors',\n  SCORES_URL: 'http://localhost:5000/api/admissionScores'\n};\nexport const schoolDetailService = {\n  getSchoolByCode: async code => {\n    try {\n      const response = await axios.get(`${API_URL}/${code}`);\n      const {\n        success,\n        data\n      } = response.data;\n      if (success && data) {\n        return {\n          success: true,\n          data: {\n            id: data.school_id,\n            code: data.school_code,\n            // Thêm mã trường\n            school_name: data.school_name,\n            location: data.address,\n            // Đổi tên field\n            school_img: data.school_img,\n            description: data.description,\n            ownership: data.ownership,\n            founded_year: data.founded_year,\n            ranking: data.ranking,\n            website: data.website,\n            phones: data.phones || [],\n            // Thêm số điện thoại\n            method_link: data.method_link,\n            // Thêm link phương thức TS\n            student_count: data.student_count,\n            majors: data.majors || []\n          }\n        };\n      }\n      return {\n        success: false,\n        error: 'Không tìm thấy thông tin trường'\n      };\n    } catch (error) {\n      console.error('Error fetching school details:', error);\n      return {\n        success: false,\n        error: 'Có lỗi xảy ra khi tải thông tin trường'\n      };\n    }\n  },\n  getSchoolMajors: async schoolId => {\n    try {\n      const response = await axios.get(`${API_URL}/${schoolId}/majors`);\n      const {\n        success,\n        data\n      } = response.data;\n      if (success && Array.isArray(data)) {\n        return {\n          success: true,\n          data\n        };\n      }\n      return {\n        success: false,\n        error: 'Không tìm thấy danh sách ngành'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  },\n  getSchoolAdmissionScores: async schoolId => {\n    try {\n      const response = await axios.get(`${API_URL}/${schoolId}/scores`);\n      const {\n        success,\n        data\n      } = response.data;\n      if (success && Array.isArray(data)) {\n        return {\n          success: true,\n          data\n        };\n      }\n      return {\n        success: false,\n        error: 'Không tìm thấy điểm chuẩn'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  },\n  getSchoolScores: async code => {\n    try {\n      var _response$data;\n      const response = await axios.get(`${updateEndpoints.SCORES_URL}/school/${code}`);\n      if (response !== null && response !== void 0 && (_response$data = response.data) !== null && _response$data !== void 0 && _response$data.success) {\n        // Transform scores data\n        const scores = response.data.data.map(score => ({\n          year: score.year || new Date().getFullYear(),\n          majorName: score.major_name || '',\n          majorCode: score.major_code || '',\n          score: score.score || '',\n          subjects: score.subjects || [],\n          note: score.note || ''\n        }));\n\n        // Sort scores by year descending and group them\n        const groupedScores = scores.reduce((acc, score) => {\n          if (!acc[score.year]) {\n            acc[score.year] = [];\n          }\n          acc[score.year].push(score);\n          return acc;\n        }, {});\n        return {\n          success: true,\n          data: groupedScores\n        };\n      }\n      return {\n        success: false,\n        data: [],\n        error: 'Không tìm thấy điểm chuẩn'\n      };\n    } catch (error) {\n      console.error('Error fetching scores:', error);\n      return {\n        success: false,\n        data: [],\n        error: 'Lỗi khi tải điểm chuẩn'\n      };\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","updateEndpoints","MAJORS_URL","SCORES_URL","schoolDetailService","getSchoolByCode","code","response","get","success","data","id","school_id","school_code","school_name","location","address","school_img","description","ownership","founded_year","ranking","website","phones","method_link","student_count","majors","error","console","getSchoolMajors","schoolId","Array","isArray","message","getSchoolAdmissionScores","getSchoolScores","_response$data","scores","map","score","year","Date","getFullYear","majorName","major_name","majorCode","major_code","subjects","note","groupedScores","reduce","acc","push"],"sources":["F:/career-project/frontend/src/services/schoolDetailService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5000/api/school/detail';\nconst updateEndpoints = {\n    MAJORS_URL: 'http://localhost:5000/api/majors',\n    SCORES_URL: 'http://localhost:5000/api/admissionScores',\n};\n\nexport const schoolDetailService = {\n    getSchoolByCode: async (code) => {\n        try {\n            const response = await axios.get(`${API_URL}/${code}`);\n            const { success, data } = response.data;\n\n            if (success && data) {\n                return {\n                    success: true,\n                    data: {\n                        id: data.school_id,\n                        code: data.school_code, // Thêm mã trường\n                        school_name: data.school_name,\n                        location: data.address, // Đổi tên field\n                        school_img: data.school_img,\n                        description: data.description,\n                        ownership: data.ownership,\n                        founded_year: data.founded_year,\n                        ranking: data.ranking,\n                        website: data.website,\n                        phones: data.phones || [], // Thêm số điện thoại\n                        method_link: data.method_link, // Thêm link phương thức TS\n                        student_count: data.student_count,\n                        majors: data.majors || [],\n                    },\n                };\n            }\n            return { success: false, error: 'Không tìm thấy thông tin trường' };\n        } catch (error) {\n            console.error('Error fetching school details:', error);\n            return {\n                success: false,\n                error: 'Có lỗi xảy ra khi tải thông tin trường',\n            };\n        }\n    },\n\n    getSchoolMajors: async (schoolId) => {\n        try {\n            const response = await axios.get(`${API_URL}/${schoolId}/majors`);\n            const { success, data } = response.data;\n\n            if (success && Array.isArray(data)) {\n                return { success: true, data };\n            }\n            return { success: false, error: 'Không tìm thấy danh sách ngành' };\n        } catch (error) {\n            return { success: false, error: error.message };\n        }\n    },\n\n    getSchoolAdmissionScores: async (schoolId) => {\n        try {\n            const response = await axios.get(`${API_URL}/${schoolId}/scores`);\n            const { success, data } = response.data;\n\n            if (success && Array.isArray(data)) {\n                return { success: true, data };\n            }\n            return { success: false, error: 'Không tìm thấy điểm chuẩn' };\n        } catch (error) {\n            return { success: false, error: error.message };\n        }\n    },\n\n\n\n    getSchoolScores: async (code) => {\n        try {\n            const response = await axios.get(\n                `${updateEndpoints.SCORES_URL}/school/${code}`,\n            );\n            if (response?.data?.success) {\n                // Transform scores data\n                const scores = response.data.data.map((score) => ({\n                    year: score.year || new Date().getFullYear(),\n                    majorName: score.major_name || '',\n                    majorCode: score.major_code || '',\n                    score: score.score || '',\n                    subjects: score.subjects || [],\n                    note: score.note || '',\n                }));\n\n                // Sort scores by year descending and group them\n                const groupedScores = scores.reduce((acc, score) => {\n                    if (!acc[score.year]) {\n                        acc[score.year] = [];\n                    }\n                    acc[score.year].push(score);\n                    return acc;\n                }, {});\n\n                return {\n                    success: true,\n                    data: groupedScores,\n                };\n            }\n            return {\n                success: false,\n                data: [],\n                error: 'Không tìm thấy điểm chuẩn',\n            };\n        } catch (error) {\n            console.error('Error fetching scores:', error);\n            return {\n                success: false,\n                data: [],\n                error: 'Lỗi khi tải điểm chuẩn',\n            };\n        }\n    },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}