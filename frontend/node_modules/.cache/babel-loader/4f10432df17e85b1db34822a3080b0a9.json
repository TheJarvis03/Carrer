{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/users';\n\n// Add request interceptor for debugging\naxios.interceptors.request.use(request => {\n  console.log('Starting Request:', request);\n  return request;\n});\n\n// Add response interceptor for debugging\naxios.interceptors.response.use(response => {\n  console.log('Response:', response);\n  return response;\n}, error => {\n  console.error('API Error:', error.response || error);\n  return Promise.reject(error);\n});\n\n// Add axios interceptor for auth headers\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport const authService = {\n  login: async (username, password) => {\n    try {\n      const response = await fetch(`${API_URL}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Đăng nhập thất bại');\n      }\n      return {\n        success: true,\n        data: data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message\n      };\n    }\n  },\n  register: async userData => {\n    try {\n      const response = await axios.post(`${API_URL}/register`, userData);\n      if (response.data.success) {\n        return {\n          success: true\n        };\n      }\n      return {\n        success: false,\n        error: response.data.error || 'Đăng ký thất bại'\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Đăng ký thất bại. Vui lòng thử lại sau.'\n      };\n    }\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n  },\n  getProfile: async () => {\n    try {\n      const response = await axios.get(`${API_URL}/profile`);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Không thể tải thông tin người dùng'\n      };\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","interceptors","request","use","console","log","response","error","Promise","reject","config","token","localStorage","getItem","headers","Authorization","authService","login","username","password","fetch","method","body","JSON","stringify","data","json","ok","Error","message","success","register","userData","post","_error$response","_error$response$data","logout","removeItem","getProfile","get","_error$response2","_error$response2$data"],"sources":["F:/career-project/frontend/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5000/api/users';\n\n// Add request interceptor for debugging\naxios.interceptors.request.use((request) => {\n    console.log('Starting Request:', request);\n    return request;\n});\n\n// Add response interceptor for debugging\naxios.interceptors.response.use(\n    (response) => {\n        console.log('Response:', response);\n        return response;\n    },\n    (error) => {\n        console.error('API Error:', error.response || error);\n        return Promise.reject(error);\n    },\n);\n\n// Add axios interceptor for auth headers\naxios.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    },\n);\n\nexport const authService = {\n    login: async (username, password) => {\n        try {\n            const response = await fetch(`${API_URL}/auth/login`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ username, password }),\n            });\n\n            const data = await response.json();\n\n            if (!response.ok) {\n                throw new Error(data.message || 'Đăng nhập thất bại');\n            }\n\n            return {\n                success: true,\n                data: data,\n            };\n        } catch (error) {\n            return {\n                success: false,\n                message: error.message,\n            };\n        }\n    },\n\n    register: async (userData) => {\n        try {\n            const response = await axios.post(`${API_URL}/register`, userData);\n            if (response.data.success) {\n                return { success: true };\n            }\n            return {\n                success: false,\n                error: response.data.error || 'Đăng ký thất bại',\n            };\n        } catch (error) {\n            return {\n                success: false,\n                error:\n                    error.response?.data?.error ||\n                    'Đăng ký thất bại. Vui lòng thử lại sau.',\n            };\n        }\n    },\n\n    logout: () => {\n        localStorage.removeItem('token');\n    },\n\n    getProfile: async () => {\n        try {\n            const response = await axios.get(`${API_URL}/profile`);\n            return {\n                success: true,\n                data: response.data,\n            };\n        } catch (error) {\n            return {\n                success: false,\n                error:\n                    error.response?.data?.error ||\n                    'Không thể tải thông tin người dùng',\n            };\n        }\n    },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}