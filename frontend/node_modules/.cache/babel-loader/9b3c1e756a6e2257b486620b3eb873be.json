{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/school/detail';\nconst updateEndpoints = {\n  MAJORS_URL: 'http://localhost:5000/api/majors',\n  SCORES_URL: 'http://localhost:5000/api/admissionScores'\n};\nexport const schoolDetailService = {\n  getSchoolByCode: async code => {\n    try {\n      const response = await axios.get(`${API_URL}/${code}`);\n      const {\n        success,\n        data\n      } = response.data;\n      if (success && data) {\n        return {\n          success: true,\n          data: {\n            id: data.school_id,\n            code: data.school_code,\n            // Thêm mã trường\n            school_name: data.school_name,\n            location: data.address,\n            // Đổi tên field \n            school_img: data.school_img,\n            description: data.description,\n            ownership: data.ownership,\n            founded_year: data.founded_year,\n            ranking: data.ranking,\n            website: data.website,\n            phones: data.phones || [],\n            // Thêm số điện thoại\n            method_link: data.method_link,\n            // Thêm link phương thức TS\n            student_count: data.student_count,\n            majors: data.majors || []\n          }\n        };\n      }\n      return {\n        success: false,\n        error: 'Không tìm thấy thông tin trường'\n      };\n    } catch (error) {\n      console.error('Error fetching school details:', error);\n      return {\n        success: false,\n        error: 'Có lỗi xảy ra khi tải thông tin trường'\n      };\n    }\n  },\n  getSchoolMajors: async schoolId => {\n    try {\n      const response = await axios.get(`${API_URL}/${schoolId}/majors`);\n      const {\n        success,\n        data\n      } = response.data;\n      if (success && Array.isArray(data)) {\n        return {\n          success: true,\n          data\n        };\n      }\n      return {\n        success: false,\n        error: 'Không tìm thấy danh sách ngành'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  },\n  getSchoolAdmissionScores: async schoolId => {\n    try {\n      const response = await axios.get(`${API_URL}/${schoolId}/scores`);\n      const {\n        success,\n        data\n      } = response.data;\n      if (success && Array.isArray(data)) {\n        return {\n          success: true,\n          data\n        };\n      }\n      return {\n        success: false,\n        error: 'Không tìm thấy điểm chuẩn'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  },\n  getSchoolFacilities: async schoolId => {\n    try {\n      const response = await axios.get(`${API_URL}/${schoolId}/facilities`);\n      const {\n        success,\n        data\n      } = response.data;\n      if (success && Array.isArray(data)) {\n        return {\n          success: true,\n          data\n        };\n      }\n      return {\n        success: false,\n        error: 'Không tìm thấy thông tin cơ sở vật chất'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  },\n  getMajorsBySchool: async code => {\n    try {\n      var _response$data, _response$data$data;\n      const response = await axios.get(`${API_URL}/${code}`);\n      if (response !== null && response !== void 0 && (_response$data = response.data) !== null && _response$data !== void 0 && _response$data.success && (_response$data$data = response.data.data) !== null && _response$data$data !== void 0 && _response$data$data.majors) {\n        // Transform majors data to group by major code\n        const groupedMajors = response.data.data.majors.reduce((acc, major) => {\n          if (!major.major_code) return acc;\n          const key = major.major_code;\n          if (!acc[key]) {\n            acc[key] = {\n              index: major.index,\n              major_code: major.major_code,\n              major_name: major.major_name,\n              quota: major.quota,\n              admission_methods: []\n            };\n          }\n          if (major.admission_methods) {\n            acc[key].admission_methods.push({\n              name: major.admission_methods,\n              subjects: major.subjects ? major.subjects.split(';').map(s => s.trim()) : []\n            });\n          }\n          return acc;\n        }, {});\n        return {\n          success: true,\n          data: Object.values(groupedMajors)\n        };\n      }\n      return {\n        success: false,\n        data: [],\n        error: 'Không tìm thấy thông tin ngành đào tạo'\n      };\n    } catch (error) {\n      console.error('Error fetching majors:', error);\n      return {\n        success: false,\n        data: [],\n        error: 'Lỗi khi tải dữ liệu ngành học'\n      };\n    }\n  },\n  getSchoolScores: async schoolCode => {\n    try {\n      var _response$data2;\n      const response = await axios.get(`${updateEndpoints.SCORES_URL}/school/${schoolCode}`);\n      if (response !== null && response !== void 0 && (_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.success) {\n        const groupedScores = {};\n        response.data.data.forEach(score => {\n          const year = score.year || new Date().getFullYear();\n          if (!groupedScores[year]) {\n            groupedScores[year] = [];\n          }\n          groupedScores[year].push({\n            majorName: score.major_name,\n            majorCode: score.major_code,\n            score: score.score || \"Chưa công bố\",\n            subjects: score.subjects || [],\n            note: score.note || ''\n          });\n        });\n        return {\n          success: true,\n          data: groupedScores\n        };\n      }\n      return {\n        success: false,\n        data: {},\n        error: 'Không tìm thấy điểm chuẩn'\n      };\n    } catch (error) {\n      console.error('Error fetching scores:', error);\n      return {\n        success: false,\n        data: {},\n        error: 'Lỗi khi tải điểm chuẩn'\n      };\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","updateEndpoints","MAJORS_URL","SCORES_URL","schoolDetailService","getSchoolByCode","code","response","get","success","data","id","school_id","school_code","school_name","location","address","school_img","description","ownership","founded_year","ranking","website","phones","method_link","student_count","majors","error","console","getSchoolMajors","schoolId","Array","isArray","message","getSchoolAdmissionScores","getSchoolFacilities","getMajorsBySchool","_response$data","_response$data$data","groupedMajors","reduce","acc","major","major_code","key","index","major_name","quota","admission_methods","push","name","subjects","split","map","s","trim","Object","values","getSchoolScores","schoolCode","_response$data2","groupedScores","forEach","score","year","Date","getFullYear","majorName","majorCode","note"],"sources":["F:/career-project/frontend/src/services/schoolDetailService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/school/detail';\r\nconst updateEndpoints = {\r\n    MAJORS_URL: 'http://localhost:5000/api/majors',\r\n    SCORES_URL: 'http://localhost:5000/api/admissionScores'\r\n};\r\n\r\nexport const schoolDetailService = {\r\n    getSchoolByCode: async (code) => {\r\n        try {\r\n            const response = await axios.get(`${API_URL}/${code}`);\r\n            const { success, data } = response.data;\r\n\r\n            if (success && data) {\r\n                return {\r\n                    success: true,\r\n                    data: {\r\n                        id: data.school_id,\r\n                        code: data.school_code, // Thêm mã trường\r\n                        school_name: data.school_name,\r\n                        location: data.address, // Đổi tên field \r\n                        school_img: data.school_img,\r\n                        description: data.description,\r\n                        ownership: data.ownership,\r\n                        founded_year: data.founded_year,\r\n                        ranking: data.ranking,\r\n                        website: data.website,\r\n                        phones: data.phones || [], // Thêm số điện thoại\r\n                        method_link: data.method_link, // Thêm link phương thức TS\r\n                        student_count: data.student_count,\r\n                        majors: data.majors || [],\r\n                    }\r\n                };\r\n            }\r\n            return { success: false, error: 'Không tìm thấy thông tin trường' };\r\n        } catch (error) {\r\n            console.error('Error fetching school details:', error);\r\n            return { \r\n                success: false, \r\n                error: 'Có lỗi xảy ra khi tải thông tin trường' \r\n            };\r\n        }\r\n    },\r\n\r\n    getSchoolMajors: async (schoolId) => {\r\n        try {\r\n            const response = await axios.get(`${API_URL}/${schoolId}/majors`);\r\n            const { success, data } = response.data;\r\n\r\n            if (success && Array.isArray(data)) {\r\n                return { success: true, data };\r\n            }\r\n            return { success: false, error: 'Không tìm thấy danh sách ngành' };\r\n        } catch (error) {\r\n            return { success: false, error: error.message };\r\n        }\r\n    },\r\n\r\n    getSchoolAdmissionScores: async (schoolId) => {\r\n        try {\r\n            const response = await axios.get(`${API_URL}/${schoolId}/scores`);\r\n            const { success, data } = response.data;\r\n\r\n            if (success && Array.isArray(data)) {\r\n                return { success: true, data };\r\n            }\r\n            return { success: false, error: 'Không tìm thấy điểm chuẩn' };\r\n        } catch (error) {\r\n            return { success: false, error: error.message };\r\n        }\r\n    },\r\n\r\n    getSchoolFacilities: async (schoolId) => {\r\n        try {\r\n            const response = await axios.get(`${API_URL}/${schoolId}/facilities`);\r\n            const { success, data } = response.data;\r\n\r\n            if (success && Array.isArray(data)) {\r\n                return { success: true, data };\r\n            }\r\n            return { success: false, error: 'Không tìm thấy thông tin cơ sở vật chất' };\r\n        } catch (error) {\r\n            return { success: false, error: error.message };\r\n        }\r\n    },\r\n\r\n    getMajorsBySchool: async (code) => {\r\n        try {\r\n            const response = await axios.get(`${API_URL}/${code}`);\r\n            if (response?.data?.success && response.data.data?.majors) {\r\n                // Transform majors data to group by major code\r\n                const groupedMajors = response.data.data.majors.reduce((acc, major) => {\r\n                    if (!major.major_code) return acc;\r\n                    \r\n                    const key = major.major_code;\r\n                    if (!acc[key]) {\r\n                        acc[key] = {\r\n                            index: major.index,\r\n                            major_code: major.major_code,\r\n                            major_name: major.major_name,\r\n                            quota: major.quota,\r\n                            admission_methods: []\r\n                        };\r\n                    }\r\n                    \r\n                    if (major.admission_methods) {\r\n                        acc[key].admission_methods.push({\r\n                            name: major.admission_methods,\r\n                            subjects: major.subjects ? major.subjects.split(';').map(s => s.trim()) : []\r\n                        });\r\n                    }\r\n                    \r\n                    return acc;\r\n                }, {});\r\n\r\n                return {\r\n                    success: true,\r\n                    data: Object.values(groupedMajors)\r\n                };\r\n            }\r\n            return { success: false, data: [], error: 'Không tìm thấy thông tin ngành đào tạo' };\r\n        } catch (error) {\r\n            console.error('Error fetching majors:', error);\r\n            return { success: false, data: [], error: 'Lỗi khi tải dữ liệu ngành học' };\r\n        }\r\n    },\r\n\r\n    getSchoolScores: async (schoolCode) => {\r\n        try {\r\n            const response = await axios.get(`${updateEndpoints.SCORES_URL}/school/${schoolCode}`);\r\n            if (response?.data?.success) {\r\n                const groupedScores = {};\r\n                response.data.data.forEach(score => {\r\n                    const year = score.year || new Date().getFullYear();\r\n                    if (!groupedScores[year]) {\r\n                        groupedScores[year] = [];\r\n                    }\r\n                    groupedScores[year].push({\r\n                        majorName: score.major_name,\r\n                        majorCode: score.major_code,\r\n                        score: score.score || \"Chưa công bố\",\r\n                        subjects: score.subjects || [],\r\n                        note: score.note || ''\r\n                    });\r\n                });\r\n\r\n                return {\r\n                    success: true,\r\n                    data: groupedScores\r\n                };\r\n            }\r\n            return { success: false, data: {}, error: 'Không tìm thấy điểm chuẩn' };\r\n        } catch (error) {\r\n            console.error('Error fetching scores:', error);\r\n            return { success: false, data: {}, error: 'Lỗi khi tải điểm chuẩn' };\r\n        }\r\n    }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}