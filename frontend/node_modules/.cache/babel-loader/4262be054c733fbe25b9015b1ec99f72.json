{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/users';\nexport const authService = {\n  login: async (username, password) => {\n    try {\n      const response = await axios.post(`${API_URL}/login`, {\n        username,\n        password\n      });\n      if (response.data.success && response.data.token) {\n        localStorage.setItem('token', response.data.token);\n        if (response.data.user) {\n          localStorage.setItem('user', JSON.stringify(response.data.user));\n        }\n        return {\n          success: true\n        };\n      }\n      return {\n        success: false,\n        error: 'Đăng nhập thất bại'\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Lỗi kết nối, vui lòng thử lại sau'\n      };\n    }\n  },\n  register: async userData => {\n    try {\n      const response = await axios.post(`${API_URL}/register`, userData);\n      if (response.data.success) {\n        return {\n          success: true\n        };\n      }\n      return {\n        success: false,\n        error: response.data.error || 'Đăng ký thất bại'\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Đăng ký thất bại. Vui lòng thử lại sau.'\n      };\n    }\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n  }\n};","map":{"version":3,"names":["axios","API_URL","authService","login","username","password","response","post","data","success","token","localStorage","setItem","user","JSON","stringify","error","_error$response","_error$response$data","register","userData","_error$response2","_error$response2$data","logout","removeItem"],"sources":["F:/career-project/frontend/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/users';\r\n\r\nexport const authService = {\r\n    login: async (username, password) => {\r\n        try {\r\n            const response = await axios.post(`${API_URL}/login`, {\r\n                username,\r\n                password\r\n            });\r\n            \r\n            if (response.data.success && response.data.token) {\r\n                localStorage.setItem('token', response.data.token);\r\n                if (response.data.user) {\r\n                    localStorage.setItem('user', JSON.stringify(response.data.user));\r\n                }\r\n                return { success: true };\r\n            }\r\n            \r\n            return { \r\n                success: false, \r\n                error: 'Đăng nhập thất bại' \r\n            };\r\n        } catch (error) {\r\n            return { \r\n                success: false, \r\n                error: error.response?.data?.error || 'Lỗi kết nối, vui lòng thử lại sau'\r\n            };\r\n        }\r\n    },\r\n\r\n    register: async (userData) => {\r\n        try {\r\n            const response = await axios.post(`${API_URL}/register`, userData);\r\n            if (response.data.success) {\r\n                return { success: true };\r\n            }\r\n            return { \r\n                success: false, \r\n                error: response.data.error || 'Đăng ký thất bại'\r\n            };\r\n        } catch (error) {\r\n            return { \r\n                success: false, \r\n                error: error.response?.data?.error || 'Đăng ký thất bại. Vui lòng thử lại sau.'\r\n            };\r\n        }\r\n    },\r\n\r\n    logout: () => {\r\n        localStorage.removeItem('token');\r\n    }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,iCAAiC;AAEjD,OAAO,MAAMC,WAAW,GAAG;EACvBC,KAAK,EAAE,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACjC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAAC,GAAGN,OAAO,QAAQ,EAAE;QAClDG,QAAQ;QACRC;MACJ,CAAC,CAAC;MAEF,IAAIC,QAAQ,CAACE,IAAI,CAACC,OAAO,IAAIH,QAAQ,CAACE,IAAI,CAACE,KAAK,EAAE;QAC9CC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEN,QAAQ,CAACE,IAAI,CAACE,KAAK,CAAC;QAClD,IAAIJ,QAAQ,CAACE,IAAI,CAACK,IAAI,EAAE;UACpBF,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEE,IAAI,CAACC,SAAS,CAACT,QAAQ,CAACE,IAAI,CAACK,IAAI,CAAC,CAAC;QACpE;QACA,OAAO;UAAEJ,OAAO,EAAE;QAAK,CAAC;MAC5B;MAEA,OAAO;QACHA,OAAO,EAAE,KAAK;QACdO,KAAK,EAAE;MACX,CAAC;IACL,CAAC,CAAC,OAAOA,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACZ,OAAO;QACHT,OAAO,EAAE,KAAK;QACdO,KAAK,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACV,QAAQ,cAAAW,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBT,IAAI,cAAAU,oBAAA,uBAApBA,oBAAA,CAAsBF,KAAK,KAAI;MAC1C,CAAC;IACL;EACJ,CAAC;EAEDG,QAAQ,EAAE,MAAOC,QAAQ,IAAK;IAC1B,IAAI;MACA,MAAMd,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAAC,GAAGN,OAAO,WAAW,EAAEmB,QAAQ,CAAC;MAClE,IAAId,QAAQ,CAACE,IAAI,CAACC,OAAO,EAAE;QACvB,OAAO;UAAEA,OAAO,EAAE;QAAK,CAAC;MAC5B;MACA,OAAO;QACHA,OAAO,EAAE,KAAK;QACdO,KAAK,EAAEV,QAAQ,CAACE,IAAI,CAACQ,KAAK,IAAI;MAClC,CAAC;IACL,CAAC,CAAC,OAAOA,KAAK,EAAE;MAAA,IAAAK,gBAAA,EAAAC,qBAAA;MACZ,OAAO;QACHb,OAAO,EAAE,KAAK;QACdO,KAAK,EAAE,EAAAK,gBAAA,GAAAL,KAAK,CAACV,QAAQ,cAAAe,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBb,IAAI,cAAAc,qBAAA,uBAApBA,qBAAA,CAAsBN,KAAK,KAAI;MAC1C,CAAC;IACL;EACJ,CAAC;EAEDO,MAAM,EAAEA,CAAA,KAAM;IACVZ,YAAY,CAACa,UAAU,CAAC,OAAO,CAAC;EACpC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}