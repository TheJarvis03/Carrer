{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/search/majors';\nexport const majorService = {\n  getAll: async () => {\n    try {\n      const res = await axios.get(API_URL);\n      const {\n        success,\n        data\n      } = res.data;\n      if (success && Array.isArray(data)) {\n        return {\n          success: true,\n          data: data.map(major => ({\n            code: major.code || major.major_code,\n            major_name: major.name || major.major_name,\n            group_id: major.group_id,\n            group_name: major.group_name,\n            exam_groups: major.exam_groups || []\n          }))\n        };\n      }\n      return {\n        success: false,\n        error: 'Invalid data format'\n      };\n    } catch (error) {\n      console.error('Error fetching majors:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  },\n  getMajorGroups: async () => {\n    try {\n      const res = await axios.get(`${API_URL}/groups`);\n      const {\n        success,\n        data\n      } = res.data;\n      if (success && Array.isArray(data)) {\n        return {\n          success: true,\n          data: data\n        };\n      }\n      return {\n        success: false,\n        error: 'Invalid group data format'\n      };\n    } catch (error) {\n      console.error('Error fetching major groups:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  },\n  searchMajors: async query => {\n    try {\n      const response = await axios.get(`${API_URL}/search?q=${encodeURIComponent(query)}`);\n      const {\n        success,\n        data\n      } = response.data;\n      if (success) {\n        return {\n          success: true,\n          data\n        };\n      }\n      return {\n        success: false,\n        error: 'Search failed'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","majorService","getAll","res","get","success","data","Array","isArray","map","major","code","major_code","major_name","name","group_id","group_name","exam_groups","error","console","message","getMajorGroups","searchMajors","query","response","encodeURIComponent"],"sources":["F:/career-project/frontend/src/services/majorService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5000/api/search/majors';\n\nexport const majorService = {\n    getAll: async () => {\n        try {\n            const res = await axios.get(API_URL);\n            const { success, data } = res.data;\n\n            if (success && Array.isArray(data)) {\n                return {\n                    success: true,\n                    data: data.map((major) => ({\n                        code: major.code || major.major_code,\n                        major_name: major.name || major.major_name,\n                        group_id: major.group_id,\n                        group_name: major.group_name,\n                        exam_groups: major.exam_groups || [],\n                    })),\n                };\n            }\n\n            return { success: false, error: 'Invalid data format' };\n        } catch (error) {\n            console.error('Error fetching majors:', error);\n            return { success: false, error: error.message };\n        }\n    },\n\n    getMajorGroups: async () => {\n        try {\n            const res = await axios.get(`${API_URL}/groups`);\n            const { success, data } = res.data;\n\n            if (success && Array.isArray(data)) {\n                return {\n                    success: true,\n                    data: data,\n                };\n            }\n\n            return { success: false, error: 'Invalid group data format' };\n        } catch (error) {\n            console.error('Error fetching major groups:', error);\n            return { success: false, error: error.message };\n        }\n    },\n\n    searchMajors: async (query) => {\n        try {\n            const response = await axios.get(\n                `${API_URL}/search?q=${encodeURIComponent(query)}`,\n            );\n            const { success, data } = response.data;\n            if (success) {\n                return { success: true, data };\n            }\n            return { success: false, error: 'Search failed' };\n        } catch (error) {\n            return { success: false, error: error.message };\n        }\n    },\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,yCAAyC;AAEzD,OAAO,MAAMC,YAAY,GAAG;EACxBC,MAAM,EAAE,MAAAA,CAAA,KAAY;IAChB,IAAI;MACA,MAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACJ,OAAO,CAAC;MACpC,MAAM;QAAEK,OAAO;QAAEC;MAAK,CAAC,GAAGH,GAAG,CAACG,IAAI;MAElC,IAAID,OAAO,IAAIE,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE;QAChC,OAAO;UACHD,OAAO,EAAE,IAAI;UACbC,IAAI,EAAEA,IAAI,CAACG,GAAG,CAAEC,KAAK,KAAM;YACvBC,IAAI,EAAED,KAAK,CAACC,IAAI,IAAID,KAAK,CAACE,UAAU;YACpCC,UAAU,EAAEH,KAAK,CAACI,IAAI,IAAIJ,KAAK,CAACG,UAAU;YAC1CE,QAAQ,EAAEL,KAAK,CAACK,QAAQ;YACxBC,UAAU,EAAEN,KAAK,CAACM,UAAU;YAC5BC,WAAW,EAAEP,KAAK,CAACO,WAAW,IAAI;UACtC,CAAC,CAAC;QACN,CAAC;MACL;MAEA,OAAO;QAAEZ,OAAO,EAAE,KAAK;QAAEa,KAAK,EAAE;MAAsB,CAAC;IAC3D,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,OAAO;QAAEb,OAAO,EAAE,KAAK;QAAEa,KAAK,EAAEA,KAAK,CAACE;MAAQ,CAAC;IACnD;EACJ,CAAC;EAEDC,cAAc,EAAE,MAAAA,CAAA,KAAY;IACxB,IAAI;MACA,MAAMlB,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,OAAO,SAAS,CAAC;MAChD,MAAM;QAAEK,OAAO;QAAEC;MAAK,CAAC,GAAGH,GAAG,CAACG,IAAI;MAElC,IAAID,OAAO,IAAIE,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE;QAChC,OAAO;UACHD,OAAO,EAAE,IAAI;UACbC,IAAI,EAAEA;QACV,CAAC;MACL;MAEA,OAAO;QAAED,OAAO,EAAE,KAAK;QAAEa,KAAK,EAAE;MAA4B,CAAC;IACjE,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,OAAO;QAAEb,OAAO,EAAE,KAAK;QAAEa,KAAK,EAAEA,KAAK,CAACE;MAAQ,CAAC;IACnD;EACJ,CAAC;EAEDE,YAAY,EAAE,MAAOC,KAAK,IAAK;IAC3B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMzB,KAAK,CAACK,GAAG,CAC5B,GAAGJ,OAAO,aAAayB,kBAAkB,CAACF,KAAK,CAAC,EACpD,CAAC;MACD,MAAM;QAAElB,OAAO;QAAEC;MAAK,CAAC,GAAGkB,QAAQ,CAAClB,IAAI;MACvC,IAAID,OAAO,EAAE;QACT,OAAO;UAAEA,OAAO,EAAE,IAAI;UAAEC;QAAK,CAAC;MAClC;MACA,OAAO;QAAED,OAAO,EAAE,KAAK;QAAEa,KAAK,EAAE;MAAgB,CAAC;IACrD,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZ,OAAO;QAAEb,OAAO,EAAE,KAAK;QAAEa,KAAK,EAAEA,KAAK,CAACE;MAAQ,CAAC;IACnD;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}