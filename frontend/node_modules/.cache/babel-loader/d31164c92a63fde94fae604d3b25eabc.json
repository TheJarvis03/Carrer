{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/users';\n\n// Add request interceptor for debugging\naxios.interceptors.request.use(request => {\n  console.log('Starting Request:', request);\n  return request;\n});\n\n// Add response interceptor for debugging\naxios.interceptors.response.use(response => {\n  console.log('Response:', response);\n  return response;\n}, error => {\n  console.error('API Error:', error.response || error);\n  return Promise.reject(error);\n});\nexport const authService = {\n  login: async (username, password) => {\n    try {\n      const response = await axios.post(`${API_URL}/login`, {\n        username,\n        password\n      });\n      if (response.data.success && response.data.token) {\n        localStorage.setItem('token', response.data.token);\n        if (response.data.user) {\n          localStorage.setItem('user', JSON.stringify(response.data.user));\n        }\n        return {\n          success: true\n        };\n      }\n      return {\n        success: false,\n        error: 'Đăng nhập thất bại'\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Lỗi kết nối, vui lòng thử lại sau'\n      };\n    }\n  },\n  register: async userData => {\n    try {\n      const response = await axios.post(`${API_URL}/register`, userData);\n      if (response.data.success) {\n        return {\n          success: true\n        };\n      }\n      return {\n        success: false,\n        error: response.data.error || 'Đăng ký thất bại'\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Đăng ký thất bại. Vui lòng thử lại sau.'\n      };\n    }\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n  }\n};","map":{"version":3,"names":["axios","API_URL","interceptors","request","use","console","log","response","error","Promise","reject","authService","login","username","password","post","data","success","token","localStorage","setItem","user","JSON","stringify","_error$response","_error$response$data","register","userData","_error$response2","_error$response2$data","logout","removeItem"],"sources":["F:/career-project/frontend/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/users';\r\n\r\n// Add request interceptor for debugging\r\naxios.interceptors.request.use(request => {\r\n    console.log('Starting Request:', request);\r\n    return request;\r\n});\r\n\r\n// Add response interceptor for debugging\r\naxios.interceptors.response.use(\r\n    response => {\r\n        console.log('Response:', response);\r\n        return response;\r\n    },\r\n    error => {\r\n        console.error('API Error:', error.response || error);\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport const authService = {\r\n    login: async (username, password) => {\r\n        try {\r\n            const response = await axios.post(`${API_URL}/login`, {\r\n                username,\r\n                password\r\n            });\r\n            \r\n            if (response.data.success && response.data.token) {\r\n                localStorage.setItem('token', response.data.token);\r\n                if (response.data.user) {\r\n                    localStorage.setItem('user', JSON.stringify(response.data.user));\r\n                }\r\n                return { success: true };\r\n            }\r\n            \r\n            return { \r\n                success: false, \r\n                error: 'Đăng nhập thất bại' \r\n            };\r\n        } catch (error) {\r\n            return { \r\n                success: false, \r\n                error: error.response?.data?.error || 'Lỗi kết nối, vui lòng thử lại sau'\r\n            };\r\n        }\r\n    },\r\n\r\n    register: async (userData) => {\r\n        try {\r\n            const response = await axios.post(`${API_URL}/register`, userData);\r\n            if (response.data.success) {\r\n                return { success: true };\r\n            }\r\n            return { \r\n                success: false, \r\n                error: response.data.error || 'Đăng ký thất bại'\r\n            };\r\n        } catch (error) {\r\n            return { \r\n                success: false, \r\n                error: error.response?.data?.error || 'Đăng ký thất bại. Vui lòng thử lại sau.'\r\n            };\r\n        }\r\n    },\r\n\r\n    logout: () => {\r\n        localStorage.removeItem('token');\r\n    }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,iCAAiC;;AAEjD;AACAD,KAAK,CAACE,YAAY,CAACC,OAAO,CAACC,GAAG,CAACD,OAAO,IAAI;EACtCE,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,OAAO,CAAC;EACzC,OAAOA,OAAO;AAClB,CAAC,CAAC;;AAEF;AACAH,KAAK,CAACE,YAAY,CAACK,QAAQ,CAACH,GAAG,CAC3BG,QAAQ,IAAI;EACRF,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEC,QAAQ,CAAC;EAClC,OAAOA,QAAQ;AACnB,CAAC,EACDC,KAAK,IAAI;EACLH,OAAO,CAACG,KAAK,CAAC,YAAY,EAAEA,KAAK,CAACD,QAAQ,IAAIC,KAAK,CAAC;EACpD,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,OAAO,MAAMG,WAAW,GAAG;EACvBC,KAAK,EAAE,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACjC,IAAI;MACA,MAAMP,QAAQ,GAAG,MAAMP,KAAK,CAACe,IAAI,CAAC,GAAGd,OAAO,QAAQ,EAAE;QAClDY,QAAQ;QACRC;MACJ,CAAC,CAAC;MAEF,IAAIP,QAAQ,CAACS,IAAI,CAACC,OAAO,IAAIV,QAAQ,CAACS,IAAI,CAACE,KAAK,EAAE;QAC9CC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEb,QAAQ,CAACS,IAAI,CAACE,KAAK,CAAC;QAClD,IAAIX,QAAQ,CAACS,IAAI,CAACK,IAAI,EAAE;UACpBF,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEE,IAAI,CAACC,SAAS,CAAChB,QAAQ,CAACS,IAAI,CAACK,IAAI,CAAC,CAAC;QACpE;QACA,OAAO;UAAEJ,OAAO,EAAE;QAAK,CAAC;MAC5B;MAEA,OAAO;QACHA,OAAO,EAAE,KAAK;QACdT,KAAK,EAAE;MACX,CAAC;IACL,CAAC,CAAC,OAAOA,KAAK,EAAE;MAAA,IAAAgB,eAAA,EAAAC,oBAAA;MACZ,OAAO;QACHR,OAAO,EAAE,KAAK;QACdT,KAAK,EAAE,EAAAgB,eAAA,GAAAhB,KAAK,CAACD,QAAQ,cAAAiB,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBR,IAAI,cAAAS,oBAAA,uBAApBA,oBAAA,CAAsBjB,KAAK,KAAI;MAC1C,CAAC;IACL;EACJ,CAAC;EAEDkB,QAAQ,EAAE,MAAOC,QAAQ,IAAK;IAC1B,IAAI;MACA,MAAMpB,QAAQ,GAAG,MAAMP,KAAK,CAACe,IAAI,CAAC,GAAGd,OAAO,WAAW,EAAE0B,QAAQ,CAAC;MAClE,IAAIpB,QAAQ,CAACS,IAAI,CAACC,OAAO,EAAE;QACvB,OAAO;UAAEA,OAAO,EAAE;QAAK,CAAC;MAC5B;MACA,OAAO;QACHA,OAAO,EAAE,KAAK;QACdT,KAAK,EAAED,QAAQ,CAACS,IAAI,CAACR,KAAK,IAAI;MAClC,CAAC;IACL,CAAC,CAAC,OAAOA,KAAK,EAAE;MAAA,IAAAoB,gBAAA,EAAAC,qBAAA;MACZ,OAAO;QACHZ,OAAO,EAAE,KAAK;QACdT,KAAK,EAAE,EAAAoB,gBAAA,GAAApB,KAAK,CAACD,QAAQ,cAAAqB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBZ,IAAI,cAAAa,qBAAA,uBAApBA,qBAAA,CAAsBrB,KAAK,KAAI;MAC1C,CAAC;IACL;EACJ,CAAC;EAEDsB,MAAM,EAAEA,CAAA,KAAM;IACVX,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC;EACpC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}