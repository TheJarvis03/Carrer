{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/schools';\nexport const schoolService = {\n  getAll: async () => {\n    try {\n      const response = await axios.get(API_URL);\n      const {\n        success,\n        data\n      } = response.data;\n      if (success && Array.isArray(data)) {\n        return {\n          success: true,\n          data: data.map(school => ({\n            code: school.code,\n            name: school.name,\n            location: school.location,\n            type: school.type\n          }))\n        };\n      }\n      return {\n        success: false,\n        error: 'Invalid data format'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  },\n  searchSchools: async query => {\n    try {\n      var _response$data;\n      const response = await axios.get(API_URL, {\n        params: {\n          q: query.trim()\n        }\n      });\n      if (response !== null && response !== void 0 && (_response$data = response.data) !== null && _response$data !== void 0 && _response$data.data) {\n        return {\n          success: true,\n          data: response.data.data.map(school => ({\n            code: school.code,\n            name: school.name,\n            location: school.location,\n            type: school.type\n          }))\n        };\n      }\n      return {\n        success: false,\n        error: 'Không tìm thấy kết quả phù hợp'\n      };\n    } catch (error) {\n      console.error('Search error:', error);\n      return {\n        success: false,\n        error: 'Không thể tìm kiếm, vui lòng thử lại'\n      };\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","schoolService","getAll","response","get","success","data","Array","isArray","map","school","code","name","location","type","error","message","searchSchools","query","_response$data","params","q","trim","console"],"sources":["F:/career-project/frontend/src/services/schoolService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5000/api/schools';\n\nexport const schoolService = {\n    getAll: async () => {\n        try {\n            const response = await axios.get(API_URL);\n            const { success, data } = response.data;\n            \n            if (success && Array.isArray(data)) {\n                return {\n                    success: true,\n                    data: data.map(school => ({\n                        code: school.code,\n                        name: school.name,\n                        location: school.location,\n                        type: school.type\n                    }))\n                };\n            }\n            return { success: false, error: 'Invalid data format' };\n        } catch (error) {\n            return { success: false, error: error.message };\n        }\n    },\n\n    searchSchools: async (query) => {\n        try {\n            const response = await axios.get(API_URL, {\n                params: { q: query.trim() }\n            });\n            \n            if (response?.data?.data) {\n                return {\n                    success: true,\n                    data: response.data.data.map(school => ({\n                        code: school.code,\n                        name: school.name,\n                        location: school.location,\n                        type: school.type\n                    }))\n                };\n            }\n            return { success: false, error: 'Không tìm thấy kết quả phù hợp' };\n        } catch (error) {\n            console.error('Search error:', error);\n            return { success: false, error: 'Không thể tìm kiếm, vui lòng thử lại' };\n        }\n    }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,mCAAmC;AAEnD,OAAO,MAAMC,aAAa,GAAG;EACzBC,MAAM,EAAE,MAAAA,CAAA,KAAY;IAChB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACJ,OAAO,CAAC;MACzC,MAAM;QAAEK,OAAO;QAAEC;MAAK,CAAC,GAAGH,QAAQ,CAACG,IAAI;MAEvC,IAAID,OAAO,IAAIE,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE;QAChC,OAAO;UACHD,OAAO,EAAE,IAAI;UACbC,IAAI,EAAEA,IAAI,CAACG,GAAG,CAACC,MAAM,KAAK;YACtBC,IAAI,EAAED,MAAM,CAACC,IAAI;YACjBC,IAAI,EAAEF,MAAM,CAACE,IAAI;YACjBC,QAAQ,EAAEH,MAAM,CAACG,QAAQ;YACzBC,IAAI,EAAEJ,MAAM,CAACI;UACjB,CAAC,CAAC;QACN,CAAC;MACL;MACA,OAAO;QAAET,OAAO,EAAE,KAAK;QAAEU,KAAK,EAAE;MAAsB,CAAC;IAC3D,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZ,OAAO;QAAEV,OAAO,EAAE,KAAK;QAAEU,KAAK,EAAEA,KAAK,CAACC;MAAQ,CAAC;IACnD;EACJ,CAAC;EAEDC,aAAa,EAAE,MAAOC,KAAK,IAAK;IAC5B,IAAI;MAAA,IAAAC,cAAA;MACA,MAAMhB,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACJ,OAAO,EAAE;QACtCoB,MAAM,EAAE;UAAEC,CAAC,EAAEH,KAAK,CAACI,IAAI,CAAC;QAAE;MAC9B,CAAC,CAAC;MAEF,IAAInB,QAAQ,aAARA,QAAQ,gBAAAgB,cAAA,GAARhB,QAAQ,CAAEG,IAAI,cAAAa,cAAA,eAAdA,cAAA,CAAgBb,IAAI,EAAE;QACtB,OAAO;UACHD,OAAO,EAAE,IAAI;UACbC,IAAI,EAAEH,QAAQ,CAACG,IAAI,CAACA,IAAI,CAACG,GAAG,CAACC,MAAM,KAAK;YACpCC,IAAI,EAAED,MAAM,CAACC,IAAI;YACjBC,IAAI,EAAEF,MAAM,CAACE,IAAI;YACjBC,QAAQ,EAAEH,MAAM,CAACG,QAAQ;YACzBC,IAAI,EAAEJ,MAAM,CAACI;UACjB,CAAC,CAAC;QACN,CAAC;MACL;MACA,OAAO;QAAET,OAAO,EAAE,KAAK;QAAEU,KAAK,EAAE;MAAiC,CAAC;IACtE,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZQ,OAAO,CAACR,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC,OAAO;QAAEV,OAAO,EAAE,KAAK;QAAEU,KAAK,EAAE;MAAuC,CAAC;IAC5E;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}