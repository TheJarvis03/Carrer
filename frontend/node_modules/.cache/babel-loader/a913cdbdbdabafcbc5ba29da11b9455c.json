{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:5000/api/search/schools\";\nexport const schoolService = {\n  getAll: async () => {\n    try {\n      const res = await axios.get(API_URL);\n      const {\n        success,\n        data\n      } = res.data;\n      if (success && Array.isArray(data)) {\n        return {\n          success: true,\n          data: data.map(school => ({\n            id: school.id || school.school_id,\n            name: school.name || school.school_name,\n            location: school.location || school.school_location,\n            type: school.type || school.school_type,\n            description: school.description || \"\"\n          }))\n        };\n      }\n      return {\n        success: false,\n        error: \"Invalid data format\"\n      };\n    } catch (error) {\n      console.error(\"Error fetching schools:\", error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","schoolService","getAll","res","get","success","data","Array","isArray","map","school","id","school_id","name","school_name","location","school_location","type","school_type","description","error","console","message"],"sources":["F:/career-project/frontend/src/services/schoolService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:5000/api/search/schools\";\r\n\r\nexport const schoolService = {\r\n    getAll: async () => {\r\n        try {\r\n            const res = await axios.get(API_URL);\r\n            const { success, data } = res.data;\r\n\r\n            if (success && Array.isArray(data)) {\r\n                return {\r\n                    success: true,\r\n                    data: data.map((school) => ({\r\n                        id: school.id || school.school_id,\r\n                        name: school.name || school.school_name,\r\n                        location: school.location || school.school_location,\r\n                        type: school.type || school.school_type,\r\n                        description: school.description || \"\",\r\n                    })),\r\n                };\r\n            }\r\n\r\n            return { success: false, error: \"Invalid data format\" };\r\n        } catch (error) {\r\n            console.error(\"Error fetching schools:\", error);\r\n            return { success: false, error: error.message };\r\n        }\r\n    },\r\n\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,0CAA0C;AAE1D,OAAO,MAAMC,aAAa,GAAG;EACzBC,MAAM,EAAE,MAAAA,CAAA,KAAY;IAChB,IAAI;MACA,MAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACJ,OAAO,CAAC;MACpC,MAAM;QAAEK,OAAO;QAAEC;MAAK,CAAC,GAAGH,GAAG,CAACG,IAAI;MAElC,IAAID,OAAO,IAAIE,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE;QAChC,OAAO;UACHD,OAAO,EAAE,IAAI;UACbC,IAAI,EAAEA,IAAI,CAACG,GAAG,CAAEC,MAAM,KAAM;YACxBC,EAAE,EAAED,MAAM,CAACC,EAAE,IAAID,MAAM,CAACE,SAAS;YACjCC,IAAI,EAAEH,MAAM,CAACG,IAAI,IAAIH,MAAM,CAACI,WAAW;YACvCC,QAAQ,EAAEL,MAAM,CAACK,QAAQ,IAAIL,MAAM,CAACM,eAAe;YACnDC,IAAI,EAAEP,MAAM,CAACO,IAAI,IAAIP,MAAM,CAACQ,WAAW;YACvCC,WAAW,EAAET,MAAM,CAACS,WAAW,IAAI;UACvC,CAAC,CAAC;QACN,CAAC;MACL;MAEA,OAAO;QAAEd,OAAO,EAAE,KAAK;QAAEe,KAAK,EAAE;MAAsB,CAAC;IAC3D,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,OAAO;QAAEf,OAAO,EAAE,KAAK;QAAEe,KAAK,EAAEA,KAAK,CAACE;MAAQ,CAAC;IACnD;EACJ;AAEJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}