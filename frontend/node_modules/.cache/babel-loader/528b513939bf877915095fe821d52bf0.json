{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: 'http://localhost:5000/api',\n  timeout: 5000\n});\n\n// Update image URL handling\nexport const getImageUrl = path => {\n  if (!path) return '/images/placeholder.png';\n  if (path.startsWith('http')) return path;\n  return path.startsWith('/') ? path : `/images/${path}`;\n};\nexport const userService = {\n  login: credentials => API.post('/users/login', credentials),\n  register: userData => API.post('/users/register', userData),\n  getProfile: () => API.get('/users/profile')\n};\nexport const careerService = {\n  getAll: () => API.post('/careers'),\n  getById: id => API.get(`/careers/${id}`)\n};\nexport const majorService = {\n  getAll: () => API.get('/search/majors'),\n  getById: id => API.get(`/majors/${id}`),\n  getByField: field => API.get(`/majors/field/${field}`)\n};\nexport const schoolService = {\n  getAll: () => API.get('/schools'),\n  getById: id => API.get(`/schools/${id}`),\n  getByLocation: location => API.get(`/schools/location/${location}`)\n};\nexport const scoreService = {\n  getAll: () => API.get('/admissionScores'),\n  getBySchool: schoolId => API.get(`/admissionScores/school/${schoolId}`),\n  getByMajor: majorId => API.get(`/admissionScores/major/${majorId}`)\n};\nexport const newsService = {\n  getAll: (page = 1, limit = 10) => API.get(`/news?page=${page}&limit=${limit}`),\n  getById: id => API.get(`/news/${id}`),\n  getByCategory: category => API.get(`/news/category/${category}`)\n};\n\n// Add interceptors for authentication\nAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport default API;","map":{"version":3,"names":["axios","API","create","baseURL","timeout","getImageUrl","path","startsWith","userService","login","credentials","post","register","userData","getProfile","get","careerService","getAll","getById","id","majorService","getByField","field","schoolService","getByLocation","location","scoreService","getBySchool","schoolId","getByMajor","majorId","newsService","page","limit","getByCategory","category","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization"],"sources":["F:/career-project/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API = axios.create({\n    baseURL: 'http://localhost:5000/api',\n    timeout: 5000,\n});\n\n// Update image URL handling\nexport const getImageUrl = (path) => {\n    if (!path) return '/images/placeholder.png';\n    if (path.startsWith('http')) return path;\n    return path.startsWith('/') ? path : `/images/${path}`;\n};\n\nexport const userService = {\n    login: (credentials) => API.post('/users/login', credentials),\n    register: (userData) => API.post('/users/register', userData),\n    getProfile: () => API.get('/users/profile'),\n};\n\nexport const careerService = {\n    getAll: () => API.post('/careers'),\n    getById: (id) => API.get(`/careers/${id}`),\n};\n\nexport const majorService = {\n    getAll: () => API.get('/search/majors'),\n    getById: (id) => API.get(`/majors/${id}`),\n    getByField: (field) => API.get(`/majors/field/${field}`),\n};\n\nexport const schoolService = {\n    getAll: () => API.get('/schools'),\n    getById: (id) => API.get(`/schools/${id}`),\n    getByLocation: (location) => API.get(`/schools/location/${location}`),\n};\n\nexport const scoreService = {\n    getAll: () => API.get('/admissionScores'),\n    getBySchool: (schoolId) => API.get(`/admissionScores/school/${schoolId}`),\n    getByMajor: (majorId) => API.get(`/admissionScores/major/${majorId}`),\n};\n\nexport const newsService = {\n    getAll: (page = 1, limit = 10) =>\n        API.get(`/news?page=${page}&limit=${limit}`),\n    getById: (id) => API.get(`/news/${id}`),\n    getByCategory: (category) => API.get(`/news/category/${category}`),\n};\n\n// Add interceptors for authentication\nAPI.interceptors.request.use((config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n});\n\nexport default API;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}