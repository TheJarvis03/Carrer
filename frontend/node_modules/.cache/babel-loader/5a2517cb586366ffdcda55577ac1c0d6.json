{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/search/majors';\nexport const majorService = {\n  getAll: async () => {\n    try {\n      const res = await axios.get(API_URL);\n      const {\n        success,\n        data,\n        count\n      } = res.data;\n      if (success && Array.isArray(data)) {\n        return {\n          success: true,\n          data: data.map(major => ({\n            major_code: major.code,\n            major_name: major.name,\n            group_id: major.group_id,\n            group_name: major.group_name,\n            exam_groups: major.exam_groups,\n            job_opportunity: major.job_opportunity,\n            description: major.description\n          }))\n        };\n      }\n      return {\n        success: false,\n        error: 'Invalid data format'\n      };\n    } catch (error) {\n      console.error('Error fetching majors:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","majorService","getAll","res","get","success","data","count","Array","isArray","map","major","major_code","code","major_name","name","group_id","group_name","exam_groups","job_opportunity","description","error","console","message"],"sources":["F:/career-project/frontend/src/services/majorService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/search/majors';\r\n\r\nexport const majorService = {\r\n    getAll: async () => {\r\n        try {\r\n            const res = await axios.get(API_URL);\r\n            const { success, data, count } = res.data;\r\n            \r\n            if (success && Array.isArray(data)) {\r\n                return {\r\n                    success: true,\r\n                    data: data.map(major => ({\r\n                        major_code: major.code,\r\n                        major_name: major.name,\r\n                        group_id: major.group_id,\r\n                        group_name: major.group_name,\r\n                        exam_groups: major.exam_groups,\r\n                        job_opportunity: major.job_opportunity,\r\n                        description: major.description\r\n                    }))\r\n                };\r\n            }\r\n            \r\n            return { success: false, error: 'Invalid data format' };\r\n        } catch (error) {\r\n            console.error('Error fetching majors:', error);\r\n            return { success: false, error: error.message };\r\n        }\r\n    }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,yCAAyC;AAEzD,OAAO,MAAMC,YAAY,GAAG;EACxBC,MAAM,EAAE,MAAAA,CAAA,KAAY;IAChB,IAAI;MACA,MAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACJ,OAAO,CAAC;MACpC,MAAM;QAAEK,OAAO;QAAEC,IAAI;QAAEC;MAAM,CAAC,GAAGJ,GAAG,CAACG,IAAI;MAEzC,IAAID,OAAO,IAAIG,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,EAAE;QAChC,OAAO;UACHD,OAAO,EAAE,IAAI;UACbC,IAAI,EAAEA,IAAI,CAACI,GAAG,CAACC,KAAK,KAAK;YACrBC,UAAU,EAAED,KAAK,CAACE,IAAI;YACtBC,UAAU,EAAEH,KAAK,CAACI,IAAI;YACtBC,QAAQ,EAAEL,KAAK,CAACK,QAAQ;YACxBC,UAAU,EAAEN,KAAK,CAACM,UAAU;YAC5BC,WAAW,EAAEP,KAAK,CAACO,WAAW;YAC9BC,eAAe,EAAER,KAAK,CAACQ,eAAe;YACtCC,WAAW,EAAET,KAAK,CAACS;UACvB,CAAC,CAAC;QACN,CAAC;MACL;MAEA,OAAO;QAAEf,OAAO,EAAE,KAAK;QAAEgB,KAAK,EAAE;MAAsB,CAAC;IAC3D,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,OAAO;QAAEhB,OAAO,EAAE,KAAK;QAAEgB,KAAK,EAAEA,KAAK,CAACE;MAAQ,CAAC;IACnD;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}